<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>備忘録 on いっとりうむの足跡</title>
    <link>https://twoooooda.github.io/tags/%E5%82%99%E5%BF%98%E9%8C%B2/</link>
    <description>Recent content in 備忘録 on いっとりうむの足跡</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 03 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://twoooooda.github.io/tags/%E5%82%99%E5%BF%98%E9%8C%B2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ラズパイに公開鍵認証でssh接続するまで</title>
      <link>https://twoooooda.github.io/blog/%E3%83%A9%E3%82%BA%E3%83%91%E3%82%A4%E3%81%AEssh%E8%A8%AD%E5%AE%9A/</link>
      <pubDate>Thu, 03 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://twoooooda.github.io/blog/%E3%83%A9%E3%82%BA%E3%83%91%E3%82%A4%E3%81%AEssh%E8%A8%AD%E5%AE%9A/</guid>
      <description>はじめに 　家に余ってたラズパイをテレビの録画サーバーにしようと思い、部屋の奥から引っ張り出してきたのはいいですが、初期設定もsshの接続設定も何もしてなかったので勉強がてらやってみました、例の如くやらないといけないことが複数サイトに渡って散らばっていたので、備忘録として一通りまとめます。なお、ラズパイのOSはインストール済み, 有線LAN接続なのを前提とし、ラズパイからモニターにはなるべく出力せずに設定することを目指します。
ホストのPCからラズパイにssh接続する 　OSをインストールしたmicroSDカードをラズパイに挿す前に, microSDカードの直下にsshという空のファイル(拡張子も無し)を作っておきます。こうすることでラズパイのGUIを触らずにsshをオンにできます。 　ラズパイに接続して操作するホストのPCのターミナルから、以下のコマンドを叩くだけでssh接続できます(デフォルトユーザーにログインする場合)。 $ ssh pi@raspberrypi.local 
IPアドレスの固定 　インターネットに繋げるたびにIPアドレスが変わると困るので、まずはラズパイのIPアドレスを固定します。ラズパイのIPアドレス固定の前に、ホストのPCのターミナルで以下を実行します。
$ ipconfig /all 
するとIPの構成が一覧で出てくるので、 デフォルトゲートウェイとDNSサーバーのIPアドレス(192.168.x.OOOみたいなやつ)をメモします。 　以降はssh接続を介してラズパイのコマンドを叩いていきます。まずはラズパイの設定ファイルを開いて編集します。
pi@raspberrypi:~$ sudo nano /etc/dhcpcd.conf 
nanoはviでもいいです(好み)。開いたら、末尾に以下を追加します。
interface eth0(無線LANの場合はここをwlan0にする) static ip_address=192.168.x.***/24 static routers=192.168.x.OOO static domain_name_servers=192.168.x.OOO 
staric ip_adress=にラズパイに割り当てたいIPアドレスを書きます。***の部分は1桁、2桁台は他の危機に割り当てられていることが多いので適当に100～200くらいにするといいらしいです。/24はサブネットマスク長です。 static routers=にデフォルトゲートウェイのIPアドレス、static domain_name_servers=にDNSサーバーのIPアドレスを書きます。編集できたら、保存してラズパイを再起動すれば変更が適用されているはずです。 参考記事 ユーザーの追加, 権限の付与 新しいユーザーの追加 　デフォルトユーザーである「pi」とは別のユーザーを作成し、権限をそちらに移行します。sshを介してラズパイのターミナルにて、
pi@raspberrypi:~$ sudo adduser |newuser| 
|newuser| に任意のユーザー名を指定して実行します。「New password:」と「Retype new password:」へ新規ユーザーのパスワードを指定します。その後くらいにいろいろ設定項目が出てきますが、特に必要がないなら全てEnterで進んでもいいです。 権限の付与 　「pi」ユーザーの権限を新しいユーザーに追加します。まずは「pi」ユーザーの権限を確認するために以下を実行します。
pi@raspberrypi:~$ groups pi 
すると「pi」ユーザーに付与されている権限が一覧で表示されるので、usermodコマンドで新しいユーザーに権限を移します。
pi@raspberrypi:~$ sudo usermod -G pi,adm,dialout,cdrom,sudo,audio,video,plugdev,games,users,input,netdev,spi,i2c,gpio newuser</description>
    </item>
    
    <item>
      <title>HUGOで作ったサイトにアマゾンのアフィリンクを貼る</title>
      <link>https://twoooooda.github.io/blog/hugo%E3%81%A7%E4%BD%9C%E3%81%A3%E3%81%9F%E3%82%B5%E3%82%A4%E3%83%88%E3%81%AB%E3%82%A2%E3%83%9E%E3%82%BE%E3%83%B3%E3%81%AE%E3%82%A2%E3%83%95%E3%82%A3%E3%83%AA%E3%83%B3%E3%82%AF%E3%82%92%E8%B2%BC%E3%82%8B/</link>
      <pubDate>Tue, 13 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://twoooooda.github.io/blog/hugo%E3%81%A7%E4%BD%9C%E3%81%A3%E3%81%9F%E3%82%B5%E3%82%A4%E3%83%88%E3%81%AB%E3%82%A2%E3%83%9E%E3%82%BE%E3%83%B3%E3%81%AE%E3%82%A2%E3%83%95%E3%82%A3%E3%83%AA%E3%83%B3%E3%82%AF%E3%82%92%E8%B2%BC%E3%82%8B/</guid>
      <description>HUGOの仕様 　静的サイトジェネレータ &amp;ldquo;HUGO&amp;rdquo; は、テーマの制作者がGitHubに上げているリポジトリをサブモジュールとして使うことで自分のサイトにテーマを導入します。ゆえに、テーマのレイアウトに関わるコードを直接書き換えることはできません(ローカルファイルは書き換えられますが)。 しかしHUGOの仕様として、/staticや/layouts以下のフォルダやファイルが優先して読み込まれるというものがあります。 ではどうするか 　当サイトのテーマを例にすると、/themes/hugo-future-imperfect-slim/layouts/partials/site-sidebar.htmlを書き換えたい場合、該当のファイルを/layouts/partials/にコピー＆ペーストすると、そちらの方が先に読み込まれるので結果的に編集して上書きが可能なわけです。 あとはAmazonのアフィリエイトリンクのHTMLコードを生成して、上記のsite-sidebar.htmlに書き込むとちゃんと表示されました。 </description>
    </item>
    
    <item>
      <title>Unityで蚊っぽい動きをするやつを作る</title>
      <link>https://twoooooda.github.io/blog/unity%E3%81%A7%E8%9A%8A%E3%82%92%E4%BD%9C%E3%82%8B/</link>
      <pubDate>Fri, 02 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://twoooooda.github.io/blog/unity%E3%81%A7%E8%9A%8A%E3%82%92%E4%BD%9C%E3%82%8B/</guid>
      <description>はじめに 　少し前にOculus Quest2を購入し、しばらくハンドトラッキングで遊んでいたんですが、急に『手で蚊を潰すVRゲーム』を作りたくなったのでとりあえず蚊っぽい挙動をするナニカを作りました。 1.スクリプト 　やっていることはごく簡単で、数フレームに一回ランダムでRotationの値を変更し、Z方向に常に力を加え続けているだけです。
using UnityEngine; public class Move_mosquite : MonoBehaviour { Rigidbody rb; public float freq, speed, power; void Start() { rb = this.GetComponent&amp;lt;Rigidbody&amp;gt;(); } void Update() { rb.velocity = rb.velocity.normalized * speed; //変数speedで速度の設定  rb.AddForce(this.transform.forward * power * Time.deltaTime, ForceMode.Force); //Z方向(forward)に力を加え続ける  if (Random.value &amp;lt; freq) //Rotationを変更する頻度を設定。毎フレームだと頻繁過ぎるので。  { transform.eulerAngles = new Vector3(Random.Range(0, 360), Random.Range(0, 360), Random.Range(0, 360)); } } } 
このままでは無限にどっかいってしまうので、適当にコライダーをつけるとか、壁に近づくと力を受けるとかにするといいかもしれません。
なお、当方めちゃくちゃ初心者なのでもっと効率的なやり方や、もっとリアルになるやり方があるかもしれませんのであしからず&amp;hellip;.
完成例   </description>
    </item>
    
  </channel>
</rss>
