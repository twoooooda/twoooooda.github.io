<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>twoooooda.net</title>
        <link>https://twoooooda.net/</link>
        <description>Recent content on twoooooda.net</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ja-jp</language>
        <lastBuildDate>Sat, 07 Dec 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://twoooooda.net/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>3D飯スキャンをしてみよう</title>
        <link>https://twoooooda.net/post/3d-meshi-scan/</link>
        <pubDate>Sat, 07 Dec 2024 00:00:00 +0000</pubDate>
        
        <guid>https://twoooooda.net/post/3d-meshi-scan/</guid>
        <description>&lt;img src="https://twoooooda.net/post/3d-meshi-scan/222419.jpg" alt="Featured image of post 3D飯スキャンをしてみよう" /&gt;&lt;h2 id=&#34;この記事は&#34;&gt;この記事は？
&lt;/h2&gt;&lt;p&gt;　この記事は、&lt;a class=&#34;link&#34; href=&#34;https://adventar.org/calendars/10291&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;某企業アドベントカレンダー2024&lt;/a&gt;七日目の記事です。
飯テロにご注意ください。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;3dスキャン&#34;&gt;3Dスキャン
&lt;/h2&gt;&lt;p&gt;　&lt;strong&gt;3Dスキャン&lt;/strong&gt;とは、文字通り空間や物体などを3次元的に記録するものです。空間や景色を平面敵に切り取る写真と違って、記録を残す時の&lt;strong&gt;周りの空間&lt;/strong&gt;ごと残せるというのは大きな利点だと思います。飯スキャンに限らず、例えば自室を3Dスキャンして模様替えに利用したり、文化財などを3Dスキャンしてより情報量の多いアーカイブとして後世に残すといったことへの利用が注目されています。&lt;/p&gt;
&lt;p&gt;　3Dスキャンする手法はいろいろありますが、一般的には多視点からの物体の写真を大量に撮って、それらから立体を推測する&lt;strong&gt;フォトグラメトリ&lt;/strong&gt;や、似た手法のNeRF、Gaussian Splatting、赤外線センサによる距離情報も使って面を推測する方法などがあります。
　立体を表現する方法にも複数あり、特に一般的なものに3つの頂点からなる平面を立体に連ねて表現するメッシュデータがあります。次点では立体を大量の特徴点で表現する点群データがあります。&lt;a class=&#34;link&#34; href=&#34;https://note.com/andpad_zero/n/n0bea3d180bc0&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;[参考]&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　この記事では、iPhone Proシリーズと、とあるアプリを使って3Dスキャンをする方法を紹介します。&lt;/p&gt;
&lt;h2 id=&#34;3dスキャンをしてみよう&#34;&gt;3Dスキャンをしてみよう
&lt;/h2&gt;&lt;p&gt;　この記事では、iPhoneアプリである&lt;a class=&#34;link&#34; href=&#34;https://apps.apple.com/jp/app/scaniverse-3d-scanner/id1541433223&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Scaniverse&lt;/strong&gt;&lt;/a&gt;を使った3Dスキャンを紹介します。このアプリは、iPhone Proシリーズに搭載されている赤外線センサ &amp;ldquo;&lt;strong&gt;LiDAR&lt;/strong&gt;&amp;rdquo; センサを使うことで本領を発揮しますが、なくてもできます。&lt;/p&gt;
&lt;p&gt;　スキャン方法としてはごく簡単で、スキャンしたいものの周りをiPhoneで動画を数十秒撮るようにするだけです。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://twoooooda.net/post/3d-meshi-scan/IMG_7531.JPEG&#34;
	width=&#34;2556&#34;
	height=&#34;1179&#34;
	srcset=&#34;https://twoooooda.net/post/3d-meshi-scan/IMG_7531_hu4259561904927218853.JPEG 480w, https://twoooooda.net/post/3d-meshi-scan/IMG_7531_hu11998499818921329904.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;スキャンしているようす。対象はディズニーのお土産の缶です&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;216&#34;
		data-flex-basis=&#34;520px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;実際にスキャンされたものは&lt;strong&gt;Sketchfab&lt;/strong&gt;などのサイトで&lt;a class=&#34;link&#34; href=&#34;https://skfb.ly/psFrX&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;こんな感じ&lt;/a&gt;に共有することもできます。成果物をみると、ほんの30秒くらいのスキャン時間だったのにも関わらず、かなり精細にスキャンできているかと思います。&lt;/p&gt;
&lt;p&gt;　いざ、飯を3Dスキャンした結果が以下です。出先でスキャンすることが多いので自宅ほど鮮明なスキャンは難しいことがありますが、どんな料理だったかを窺い知るには十分なクオリティだと思います。実際の距離情報を使っているので、各種サービスや後述するUnityなどで使う場合、実際の寸法のまま利用することもできます。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://twoooooda.net/post/3d-meshi-scan/Hayashi.png&#34;
	width=&#34;1312&#34;
	height=&#34;702&#34;
	srcset=&#34;https://twoooooda.net/post/3d-meshi-scan/Hayashi_hu15843764115234044537.png 480w, https://twoooooda.net/post/3d-meshi-scan/Hayashi_hu11183046993395773244.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;大好物ハヤシライス。アドカレ一日目で作ったハヤシライスです。&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;186&#34;
		data-flex-basis=&#34;448px&#34;
	
&gt;
&lt;img src=&#34;https://twoooooda.net/post/3d-meshi-scan/Ramen.png&#34;
	width=&#34;1176&#34;
	height=&#34;690&#34;
	srcset=&#34;https://twoooooda.net/post/3d-meshi-scan/Ramen_hu5764581520829856626.png 480w, https://twoooooda.net/post/3d-meshi-scan/Ramen_hu7053138917358107537.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;築地にあるTAKETONBOという店のラーメン&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;170&#34;
		data-flex-basis=&#34;409px&#34;
	
&gt;
&lt;img src=&#34;https://twoooooda.net/post/3d-meshi-scan/GarlicRice.png&#34;
	width=&#34;1196&#34;
	height=&#34;698&#34;
	srcset=&#34;https://twoooooda.net/post/3d-meshi-scan/GarlicRice_hu13441419654151063271.png 480w, https://twoooooda.net/post/3d-meshi-scan/GarlicRice_hu14364998009172742043.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Denny’sのガーリックライス&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;171&#34;
		data-flex-basis=&#34;411px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sketchfabリンク&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://skfb.ly/pszDV&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ハヤシライス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://skfb.ly/psF8w&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ラーメン&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://skfb.ly/psF8x&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ガーリックライス&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;　挙げた3Dスキャンは飯部分以外Scaniverseの機能でトリミングしていますが、実際は飯の周りもスキャンされています。ハヤシライスのスキャンでは皿部分のメッシュが溶けてしまっていますが、これは真っ白な皿だったために特徴点を掴めず、うまくメッシュを貼れなかったのだと考えられます。&lt;/p&gt;
&lt;h2 id=&#34;スキャンデータで遊ぼう&#34;&gt;スキャンデータで遊ぼう
&lt;/h2&gt;&lt;p&gt;　3Dスキャンをすると、飯の3Dデータが手に入ります。ただの記録に使うのもいいですが、Unityなどのゲームエンジンを使うと3Dオブジェクトとして遊ぶことができます。&lt;/p&gt;
&lt;h3 id=&#34;arで&#34;&gt;ARで
&lt;/h3&gt;&lt;p&gt;　Scaiverseには、AR機能が標準で搭載されています。この機能を使うと、例えばあの日食べた飯をAR的に、ほぼ原寸大で鑑賞することができます。&lt;/p&gt;
&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe loading=&#34;lazy&#34; 
            src=&#34;https://www.youtube.com/embed/_bDDOP5Wvjg&#34; 
            allowfullscreen 
            title=&#34;YouTube Video&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;h3 id=&#34;vrで&#34;&gt;VRで
&lt;/h3&gt;&lt;p&gt;　次はVRです。UnityとMeta Quest2を使って、仮想空間で遊んでみました。VRなら好きな飯で部屋を満たすことだってできます。&lt;/p&gt;
&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe loading=&#34;lazy&#34; 
            src=&#34;https://www.youtube.com/embed/-wFw42e9yu8&#34; 
            allowfullscreen 
            title=&#34;YouTube Video&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;h3 id=&#34;mrで&#34;&gt;MRで
&lt;/h3&gt;&lt;p&gt;　最後にMRです。同じくUnityと、HoloLens2で遊んでみました。MRはARとVRのいいとこどりだけあって、独特の楽しみ方もできそうです。&lt;/p&gt;
&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe loading=&#34;lazy&#34; 
            src=&#34;https://www.youtube.com/embed/8s9vZR64gNo&#34; 
            allowfullscreen 
            title=&#34;YouTube Video&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;さいごに&#34;&gt;さいごに
&lt;/h2&gt;&lt;p&gt;　いかがでしたでしょうか。写真で残すのももちろんいいですが、3Dデータとして残すのも実用段階に入っていると思います。皆さんもやってみてください。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Hugoで非推奨のプロパティとかを使ってエラーが出たとき</title>
        <link>https://twoooooda.net/post/hugo-komattara/</link>
        <pubDate>Sun, 01 Dec 2024 00:00:00 +0000</pubDate>
        
        <guid>https://twoooooda.net/post/hugo-komattara/</guid>
        <description>&lt;img src="https://twoooooda.net/post/hugo-komattara/hugo.png" alt="Featured image of post Hugoで非推奨のプロパティとかを使ってエラーが出たとき" /&gt;&lt;p&gt;この記事は、&lt;a class=&#34;link&#34; href=&#34;https://adventar.org/calendars/10291&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;某企業アドベントカレンダー2024&lt;/a&gt;の六日目の記事です。&lt;/p&gt;
&lt;h2 id=&#34;経緯&#34;&gt;経緯
&lt;/h2&gt;&lt;p&gt;最近久々に記事を書こうとしてHugoを使ったら、以下のようなエラーメッセージが出てうまくビルドができませんでした。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ hugo
WARN  deprecated: resources.ToCSS was deprecated in Hugo v0.128.0 and will be removed in a future release. Use css.Sass instead.
ERROR deprecated: .Site.LastChange was deprecated in Hugo v0.123.0 and will be removed in Hugo 0.140.0. Use .Site.Lastmod instead.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;要するに、現行のHugoのバージョンでは非推奨、あるいは利用不可なプロパティを使っているせいで怒られています。&lt;/p&gt;
&lt;h2 id=&#34;原因&#34;&gt;原因
&lt;/h2&gt;&lt;p&gt;私の場合は、&lt;a class=&#34;link&#34; href=&#34;https://github.com/CaiJimmy/hugo-theme-stack&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ブログのテンプレート&lt;/a&gt;をgitのsubmoduleの形で使っていて、ある程度はテンプレートのリポジトリに依存してしまいます。submoduleの仕様として、submoduleの関係を設定したタイミングのリポジトリの状態を保持してしまうみたいです。このブログを作ったのがもう3年前なので、テンプレートの中身が3年前のバージョンで止まっていたのが原因でした。&lt;/p&gt;
&lt;h2 id=&#34;解決&#34;&gt;解決
&lt;/h2&gt;&lt;p&gt;解決策としては、以下のコマンドでsubmoduleに設定しているリポジトリを最新の状態にすれば解決できました。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ git submodule update --remote
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;内容としてはこれだけなのですが、備忘録として残します。&lt;/p&gt;
&lt;h2 id=&#34;補足&#34;&gt;補足
&lt;/h2&gt;&lt;p&gt;PCを新調したなどで、新しく&lt;code&gt;git clone&lt;/code&gt;したい場合、以下のコマンドでsubmoduleの情報、submoduleとの関係などを引き継いでcloneできます。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git clone --recursive https://github.com/twoooooda/[リポジトリ.git]
&lt;/code&gt;&lt;/pre&gt;</description>
        </item>
        <item>
        <title>いっとりうむのハヤシライスレシピ</title>
        <link>https://twoooooda.net/post/howtomakehayashirice/</link>
        <pubDate>Sat, 30 Nov 2024 00:00:00 +0000</pubDate>
        
        <guid>https://twoooooda.net/post/howtomakehayashirice/</guid>
        <description>&lt;img src="https://twoooooda.net/post/howtomakehayashirice/ReferenceImg/IMG_7520.JPG" alt="Featured image of post いっとりうむのハヤシライスレシピ" /&gt;&lt;h2 id=&#34;この記事は&#34;&gt;この記事は？
&lt;/h2&gt;&lt;p&gt;　この記事は、&lt;a class=&#34;link&#34; href=&#34;https://adventar.org/calendars/10291&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;某企業アドベントカレンダー2024&lt;/a&gt;一日目の記事です。
記事執筆ハードルを下げるための記事ですので、あえてTech系とは関係ない記事にしています。ご了承ください。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;ハヤシライスを作ろうよ&#34;&gt;ハヤシライスを、作ろ〜〜〜うよ‼️
&lt;/h2&gt;&lt;p&gt;　この記事ではハヤシライスが大好きな私が作り続けた、いい感じのハヤシライスレシピをご紹介します。といっても、市販のルーと普通の食材を使った普通のレシピですし、箱の裏に書いてあるレシピほぼそのままの普通のハヤシライスです。ですが、とっても美味しいです。お試しください。&lt;/p&gt;
&lt;h2 id=&#34;材料2食分&#34;&gt;材料（2食分）
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;完熟トマトのハヤシライスソース（おすすめ） 半箱&lt;/li&gt;
&lt;li&gt;薄めの肉（牛肉だと美味しい、豚肉でも可）180g～250gくらい&lt;/li&gt;
&lt;li&gt;玉ねぎ（デカければデカいほどよい）1個 サイズによっては2個&lt;/li&gt;
&lt;li&gt;ぶなしめじ 1株&lt;/li&gt;
&lt;li&gt;付け合わせの任意の草 適量&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://twoooooda.net/post/howtomakehayashirice/ReferenceImg/IMG_7503.JPEG&#34;
	width=&#34;2100&#34;
	height=&#34;1576&#34;
	srcset=&#34;https://twoooooda.net/post/howtomakehayashirice/ReferenceImg/IMG_7503_hu15504969531571996795.JPEG 480w, https://twoooooda.net/post/howtomakehayashirice/ReferenceImg/IMG_7503_hu5183306286555913691.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;今回は奮発して牛肉を使う&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;319px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;作り方&#34;&gt;作り方
&lt;/h2&gt;&lt;h3 id=&#34;材料を切る&#34;&gt;材料を切る
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;まず&lt;strong&gt;玉ねぎ&lt;/strong&gt;を切ります。&lt;strong&gt;薄切り&lt;/strong&gt;だと早く火が通りますし、ルーを楽しめます。しかし、煮込み時間によっては完全に溶けて消失してしまいます。&lt;strong&gt;櫛切り&lt;/strong&gt;にすると食べ応えを増すことができます。煮込んでも溶けにくいですが、ハヤシライス感は若干薄まります。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://twoooooda.net/post/howtomakehayashirice/ReferenceImg/IMG_7504.JPEG&#34;
	width=&#34;4032&#34;
	height=&#34;3024&#34;
	srcset=&#34;https://twoooooda.net/post/howtomakehayashirice/ReferenceImg/IMG_7504_hu17250159679152589299.JPEG 480w, https://twoooooda.net/post/howtomakehayashirice/ReferenceImg/IMG_7504_hu1678563447281536508.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;私はこれくらいが好み&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;次に&lt;strong&gt;肉&lt;/strong&gt;を切ります（切られていなければ）。でっけー肉を入れてやりましょう。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ぶなしめじ&lt;/strong&gt;の石づきを切ります。ただし、ぶなしめじは一度凍らせて入れても美味しい（らしい）です。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;材料を炒める&#34;&gt;材料を炒める
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;まず&lt;strong&gt;玉ねぎ&lt;/strong&gt;を炒めます。炒めすぎると後の煮込みの行程で溶けてなくなるのでほどほどにするのがコツです。塩コショウをすると早く熱が通ります。
&lt;img src=&#34;https://twoooooda.net/post/howtomakehayashirice/ReferenceImg/IMG_7507.JPG&#34;
	width=&#34;5712&#34;
	height=&#34;4284&#34;
	srcset=&#34;https://twoooooda.net/post/howtomakehayashirice/ReferenceImg/IMG_7507_hu17707957227145758546.JPG 480w, https://twoooooda.net/post/howtomakehayashirice/ReferenceImg/IMG_7507_hu3114559067049950795.JPG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;よさげ&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;玉ねぎに火が通ったら、&lt;strong&gt;肉&lt;/strong&gt;を入れます。これも適当に塩コショウをするといいでしょう。いい感じにほぐしながら炒めていきます。
&lt;img src=&#34;https://twoooooda.net/post/howtomakehayashirice/ReferenceImg/IMG_7508.JPG&#34;
	width=&#34;5712&#34;
	height=&#34;4284&#34;
	srcset=&#34;https://twoooooda.net/post/howtomakehayashirice/ReferenceImg/IMG_7508_hu18229111714502515015.JPG 480w, https://twoooooda.net/post/howtomakehayashirice/ReferenceImg/IMG_7508_hu11280880403023079378.JPG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;豪快に&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;肉にも火が通ったら、&lt;strong&gt;ぶなしめじ&lt;/strong&gt;をほぐしながら入れます。これはサッと炒めるだけでおｋです。
&lt;img src=&#34;https://twoooooda.net/post/howtomakehayashirice/ReferenceImg/IMG_7509.JPG&#34;
	width=&#34;4032&#34;
	height=&#34;3024&#34;
	srcset=&#34;https://twoooooda.net/post/howtomakehayashirice/ReferenceImg/IMG_7509_hu15017853931490563384.JPG 480w, https://twoooooda.net/post/howtomakehayashirice/ReferenceImg/IMG_7509_hu7745755540186447903.JPG 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;煮込む&#34;&gt;煮込む
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;いい感じに火が通ったら、&lt;strong&gt;水&lt;/strong&gt;を入れます。私は箱に書いてある分量よりちょっと多めに入れます。箱に書いてある時間だけ煮込みます。&lt;/li&gt;
&lt;li&gt;いい感じに煮込めたら、一旦火を止めてルーを割り入れます。ルーをしっかり溶かせたら、また火をつけて箱に書いてある時間分だけ煮込みます。ときどきかき混ぜてください。
&lt;img src=&#34;https://twoooooda.net/post/howtomakehayashirice/ReferenceImg/IMG_7511.JPG&#34;
	width=&#34;5712&#34;
	height=&#34;4284&#34;
	srcset=&#34;https://twoooooda.net/post/howtomakehayashirice/ReferenceImg/IMG_7511_hu5042231995690418436.JPG 480w, https://twoooooda.net/post/howtomakehayashirice/ReferenceImg/IMG_7511_hu16826309399536961179.JPG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;火を消してから入れろよ！&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;完成&#34;&gt;完成！
&lt;/h3&gt;&lt;p&gt;　いい感じに煮込めたら完成です。罪悪感消しの草と一緒に召し上がれ！
&lt;img src=&#34;https://twoooooda.net/post/howtomakehayashirice/ReferenceImg/IMG_7521.JPG&#34;
	width=&#34;4032&#34;
	height=&#34;3024&#34;
	srcset=&#34;https://twoooooda.net/post/howtomakehayashirice/ReferenceImg/IMG_7521_hu10870051546209983649.JPG 480w, https://twoooooda.net/post/howtomakehayashirice/ReferenceImg/IMG_7521_hu2255822609362377636.JPG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;ちゃんと草も食えよ&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;過去作&#34;&gt;過去作
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://twoooooda.net/post/howtomakehayashirice/ProductImg/3BE07FCA-609A-4093-95D8-12BFE367A20E.jpeg&#34;
	width=&#34;4032&#34;
	height=&#34;3024&#34;
	srcset=&#34;https://twoooooda.net/post/howtomakehayashirice/ProductImg/3BE07FCA-609A-4093-95D8-12BFE367A20E_hu15960828182557164360.jpeg 480w, https://twoooooda.net/post/howtomakehayashirice/ProductImg/3BE07FCA-609A-4093-95D8-12BFE367A20E_hu16678974624151927138.jpeg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;
&lt;img src=&#34;https://twoooooda.net/post/howtomakehayashirice/ProductImg/4F196D1B-FA1F-4146-9483-A5976E622DEC.jpeg&#34;
	width=&#34;4032&#34;
	height=&#34;3024&#34;
	srcset=&#34;https://twoooooda.net/post/howtomakehayashirice/ProductImg/4F196D1B-FA1F-4146-9483-A5976E622DEC_hu16309872950636449634.jpeg 480w, https://twoooooda.net/post/howtomakehayashirice/ProductImg/4F196D1B-FA1F-4146-9483-A5976E622DEC_hu326245081683447810.jpeg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://twoooooda.net/post/howtomakehayashirice/ProductImg/28284E5E-3E8E-4A85-8A94-B004FE158A13.jpeg&#34;
	width=&#34;4032&#34;
	height=&#34;3024&#34;
	srcset=&#34;https://twoooooda.net/post/howtomakehayashirice/ProductImg/28284E5E-3E8E-4A85-8A94-B004FE158A13_hu16653192309434756985.jpeg 480w, https://twoooooda.net/post/howtomakehayashirice/ProductImg/28284E5E-3E8E-4A85-8A94-B004FE158A13_hu3974990303032757331.jpeg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;
&lt;img src=&#34;https://twoooooda.net/post/howtomakehayashirice/ProductImg/A369C773-F551-4EBC-A3F0-C43FDAC77BC8.jpeg&#34;
	width=&#34;4032&#34;
	height=&#34;3024&#34;
	srcset=&#34;https://twoooooda.net/post/howtomakehayashirice/ProductImg/A369C773-F551-4EBC-A3F0-C43FDAC77BC8_hu1614522700759149868.jpeg 480w, https://twoooooda.net/post/howtomakehayashirice/ProductImg/A369C773-F551-4EBC-A3F0-C43FDAC77BC8_hu5450130284428867938.jpeg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Bambu Lab A1 mini買ってみました。</title>
        <link>https://twoooooda.net/post/3dprinter-kattemita/</link>
        <pubDate>Sat, 15 Jun 2024 00:00:00 +0000</pubDate>
        
        <guid>https://twoooooda.net/post/3dprinter-kattemita/</guid>
        <description>&lt;img src="https://twoooooda.net/post/3dprinter-kattemita/IMG_6765.JPEG" alt="Featured image of post Bambu Lab A1 mini買ってみました。" /&gt;&lt;h2 id=&#34;話題の3dプリンターがセールしてた&#34;&gt;話題の3Dプリンターがセールしてた
&lt;/h2&gt;&lt;p&gt;　ちょっと前から低価格で高精度、高速プリントができると話題になってた&lt;strong&gt;Bambu Lab A1 mini&lt;/strong&gt;が&lt;a class=&#34;link&#34; href=&#34;https://jp.store.bambulab.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Bambu Lab ストア&lt;/a&gt;で13,000円オフの39,800円になってたので買ってしまいました。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://twoooooda.net/post/3dprinter-kattemita/2024-06-15.jpg&#34;
	width=&#34;1517&#34;
	height=&#34;738&#34;
	srcset=&#34;https://twoooooda.net/post/3dprinter-kattemita/2024-06-15_hu2304329384502415888.jpg 480w, https://twoooooda.net/post/3dprinter-kattemita/2024-06-15_hu6945517229046973920.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;安い！&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;205&#34;
		data-flex-basis=&#34;493px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;開封&#34;&gt;開封
&lt;/h2&gt;&lt;p&gt;　開封すると、ダンボール、フォームで丁寧に梱包されたA1 miniが入っており、ヘッド部分も専用の部品で固定されていました。付属品としては各ネジを締めるための6角レンチ、フィラメント詰まり解消ツール、オイル、グリス、試験印刷用フィラメントなどが入っていました。中にはなんと置時計自作用の時計モジュールまで入っていました。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://twoooooda.net/post/3dprinter-kattemita/IMG_6744.JPG&#34;
	width=&#34;4032&#34;
	height=&#34;3024&#34;
	srcset=&#34;https://twoooooda.net/post/3dprinter-kattemita/IMG_6744_hu17478672462444908074.JPG 480w, https://twoooooda.net/post/3dprinter-kattemita/IMG_6744_hu6596773425872573482.JPG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;丁寧な梱包&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;
&lt;img src=&#34;https://twoooooda.net/post/3dprinter-kattemita/IMG_6746.JPEG&#34;
	width=&#34;4032&#34;
	height=&#34;3024&#34;
	srcset=&#34;https://twoooooda.net/post/3dprinter-kattemita/IMG_6746_hu210832387316468784.JPEG 480w, https://twoooooda.net/post/3dprinter-kattemita/IMG_6746_hu14422511404065792261.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;付属品&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;img src=&#34;https://twoooooda.net/post/3dprinter-kattemita/IMG_6745.JPEG&#34;
	width=&#34;4032&#34;
	height=&#34;3024&#34;
	srcset=&#34;https://twoooooda.net/post/3dprinter-kattemita/IMG_6745_hu13574492029638818485.JPEG 480w, https://twoooooda.net/post/3dprinter-kattemita/IMG_6745_hu6567097501737413883.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;時計モジュールまでついてきた&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;使う前の注意点&#34;&gt;使う前の注意点
&lt;/h2&gt;&lt;p&gt;　中華製品あるあるですが、電源プラグが3ピンです。日本の一般家庭用の2ピンにするアダプタを付属してきませんので、別途用意する必要があります。あと印刷中はかなり揺れます。動作音自体は比較的静かですが、特に横揺れが大きいので、置く場所や振動対策に気を付ける必要があるかもしれません。私は学習机についてきた木製の頑丈なコンテナの上に置いていて、今のところ不都合はありません。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://twoooooda.net/post/3dprinter-kattemita/IMG_6747.JPG&#34;
	width=&#34;4032&#34;
	height=&#34;3024&#34;
	srcset=&#34;https://twoooooda.net/post/3dprinter-kattemita/IMG_6747_hu213459992443503111.JPG 480w, https://twoooooda.net/post/3dprinter-kattemita/IMG_6747_hu12220928323823719437.JPG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;3ピンです&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;所感&#34;&gt;所感
&lt;/h2&gt;&lt;p&gt;　総合的にかなり満足度高い買い物をしたと思います。タッチパネルのインタフェースの完成度も高く使いやすいですし、インターネットに繋がるので無線経由で印刷データを送信することができます。ネットワーク経由あるいはBluetoothで、&lt;a class=&#34;link&#34; href=&#34;https://apps.apple.com/us/app/bambu-handy/id1625671285&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PCのスライスソフト&lt;/a&gt;や&lt;a class=&#34;link&#34; href=&#34;https://apps.apple.com/us/app/bambu-handy/id1625671285&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;スマホアプリ&lt;/a&gt;と接続でき、ライトの点灯やカメラ映像の受信などもできます。
　最初の印刷をする時にだいたい行うステージの水平出しなどの面倒な作業もスイッチ一つで行ってくれて、印刷中も振動やノイズを感知し、リアルタイムで調整しているそうです。次回以降の印刷でもステージ、ヘッドの加熱、各種調整を自動でやってくれるので、本当に気軽に印刷することができます。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://twoooooda.net/post/3dprinter-kattemita/IMG_6748.JPG&#34;
	width=&#34;4032&#34;
	height=&#34;3024&#34;
	srcset=&#34;https://twoooooda.net/post/3dprinter-kattemita/IMG_6748_hu8227157303628879253.JPG 480w, https://twoooooda.net/post/3dprinter-kattemita/IMG_6748_hu11353314370047161896.JPG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;良い買い物をした&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;
&lt;img src=&#34;https://twoooooda.net/post/3dprinter-kattemita/IMG_6766.JPEG&#34;
	width=&#34;4032&#34;
	height=&#34;3024&#34;
	srcset=&#34;https://twoooooda.net/post/3dprinter-kattemita/IMG_6766_hu14944694641314657852.JPEG 480w, https://twoooooda.net/post/3dprinter-kattemita/IMG_6766_hu9407937989215236813.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;インタフェースも使いやすい&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;　Bambu Lab A1 mini、おすすめです。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>USB TVチューナーPX-S1UDを使ってテレビを視聴する最速手順</title>
        <link>https://twoooooda.net/post/px-s1udandtvtest/</link>
        <pubDate>Mon, 27 May 2024 00:00:00 +0000</pubDate>
        
        <guid>https://twoooooda.net/post/px-s1udandtvtest/</guid>
        <description>&lt;img src="https://twoooooda.net/post/px-s1udandtvtest/0f3010e5fa0dcb1600eb6a88167d6465.png" alt="Featured image of post USB TVチューナーPX-S1UDを使ってテレビを視聴する最速手順" /&gt;&lt;p&gt;基本的には &lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.tsukumijima.net/article/tvtest-usage/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;先駆者様のサイト&lt;/a&gt;&lt;/strong&gt; をかいつまんだだけです。詳しい&amp;amp;正確な情報はそちらを参考にしてください。&lt;/p&gt;
&lt;h2 id=&#34;用意するもの&#34;&gt;用意するもの
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;USB TVチューナー &lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://amzn.asia/d/7nwX0jt&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PX-S1UD V2.0&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;今買えるものはだいたいV2.0な気がします。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;B-CASカード&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;私はぶっ壊れたnasneから奪ってきました。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;USBカードリーダー&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://amzn.asia/d/b5PTsTL&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;NTTのやつ（SCR3310V2.0）&lt;/a&gt;が多分一番有名で安定、この記事でもこのリーダーを使っている前提で進めます。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Windows PC&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;テレビ用同軸ケーブル
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ソフトウェアのダウンロードインストール&#34;&gt;ソフトウェアのダウンロード・インストール
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;PX-S1UDのドライバは&lt;a class=&#34;link&#34; href=&#34;https://www.plex-net.co.jp/download/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;こちら&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;カードリーダー（SCR3310V2.0）のドライバは&lt;a class=&#34;link&#34; href=&#34;https://www.ntt.com/business/services/application/authentication/jpki/download10.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;こちら&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.axfc.net/u/2503550&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;BonDriver-Siano&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PX-S1UDでテレビを見るために別途導入が必要なドライバです。BonDriverは他にも種類がありますが、私の環境ではこれしか動きませんでした。後述。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;TVTest&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windowsでテレビを見るためのソフトウェアです。これも私の環境では32bit版しか動きませんでした。ビルド済みのものは&lt;a class=&#34;link&#34; href=&#34;https://blog.tsukumijima.net/article/tvtest-usage/#toc3&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;こちら&lt;/a&gt;にあります。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tvtestの準備&#34;&gt;TVTestの準備
&lt;/h2&gt;&lt;h3 id=&#34;解凍フォルダの移動&#34;&gt;解凍・フォルダの移動
&lt;/h3&gt;&lt;p&gt;　ビルド後のTVTestをダウンロードしてきたら、解凍して任意の場所に移動させます。この時、 &lt;strong&gt;C:\Users・C:\Program Files 以外のフォルダ&lt;/strong&gt; に移動させないといけないそうです。&lt;/p&gt;
&lt;h3 id=&#34;directshow-フィルタのインストール&#34;&gt;DirectShow フィルタのインストール
&lt;/h3&gt;&lt;p&gt;　Windows 10 では、日本のテレビ放送の映像コーデックである MPEG-2 をデコードして再生するのに必要な Microsoft DTV-DVD Video Decoder が標準ではインストールされていないそうなので、TVTest の作者さんが用意してくれているものでインストールします。&lt;a class=&#34;link&#34; href=&#34;https://blog.tsukumijima.net/article/tvtest-usage/#toc5&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;詳しくは&lt;/a&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;TVTest フォルダ内にある [* filter-install.jse] を、管理者権限で実行してください。&lt;/p&gt;
&lt;h3 id=&#34;bondriverのセットアップ&#34;&gt;BonDriverのセットアップ
&lt;/h3&gt;&lt;p&gt;　環境や用途によってはBonDriverを複数種類使う可能性も考えられます。なのでTVTestの下に別途BonDriverというフォルダを作って、そこで一括管理する方法が推奨されています。
&lt;img src=&#34;https://twoooooda.net/post/px-s1udandtvtest/e9550c6f4149126ddf8624b16b39048e.png&#34;
	width=&#34;870&#34;
	height=&#34;295&#34;
	srcset=&#34;https://twoooooda.net/post/px-s1udandtvtest/e9550c6f4149126ddf8624b16b39048e_hu17935511195776063111.png 480w, https://twoooooda.net/post/px-s1udandtvtest/e9550c6f4149126ddf8624b16b39048e_hu17192775825425129518.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;294&#34;
		data-flex-basis=&#34;707px&#34;
	
&gt;&lt;img src=&#34;https://twoooooda.net/post/px-s1udandtvtest/7ea95df318a7936955291669ac5e4f1f.png&#34;
	width=&#34;589&#34;
	height=&#34;249&#34;
	srcset=&#34;https://twoooooda.net/post/px-s1udandtvtest/7ea95df318a7936955291669ac5e4f1f_hu10744437854333523522.png 480w, https://twoooooda.net/post/px-s1udandtvtest/7ea95df318a7936955291669ac5e4f1f_hu13607743567104867734.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;こんなには要らない&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;236&#34;
		data-flex-basis=&#34;567px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;tvtestのセットアップ&#34;&gt;TVTestのセットアップ
&lt;/h3&gt;&lt;h4 id=&#34;初期設定&#34;&gt;初期設定
&lt;/h4&gt;&lt;p&gt;　最初に起動すると、設定のポップアップウィンドウが出てきます。この設定はあとで変えられるので適当でも大丈夫です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;BonDriver … 今後 BonDriver 検索フォルダを変更するため今は空のままにしておく（後述）&lt;/li&gt;
&lt;li&gt;H.264/AVCデコーダ … &lt;strong&gt;自動&lt;/strong&gt; のままで OK&lt;/li&gt;
&lt;li&gt;H.265/HEVCデコーダ … &lt;strong&gt;自動&lt;/strong&gt; のままで OK&lt;/li&gt;
&lt;li&gt;MPEG-2デコーダ … &lt;strong&gt;TVTest DTV Video Decoder&lt;/strong&gt; に変更する&lt;/li&gt;
&lt;li&gt;映像レンダラ … &lt;strong&gt;EVR&lt;/strong&gt; に変更する&lt;/li&gt;
&lt;li&gt;録画ファイルの保存フォルダ … TVTest で録画した番組の保存先フォルダをここで設定可能&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;bondriverの参照&#34;&gt;BonDriverの参照
&lt;/h4&gt;&lt;p&gt;　前述したBonDriverフォルダをTVTestから参照します。TVTestウィンドウ内の無を右クリックして設定を開きます。
すると、&lt;strong&gt;一般&lt;/strong&gt;の中に&lt;strong&gt;BonDriver検索フォルダ&lt;/strong&gt;の項目があるので、先ほど作ったBonDriverフォルダを指定します。
&lt;img src=&#34;https://twoooooda.net/post/px-s1udandtvtest/eebea229ec33c069c5b7b1c87df0fc8a.png&#34;
	width=&#34;1160&#34;
	height=&#34;798&#34;
	srcset=&#34;https://twoooooda.net/post/px-s1udandtvtest/eebea229ec33c069c5b7b1c87df0fc8a_hu11112342759484077195.png 480w, https://twoooooda.net/post/px-s1udandtvtest/eebea229ec33c069c5b7b1c87df0fc8a_hu10096337617716162903.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;145&#34;
		data-flex-basis=&#34;348px&#34;
	
&gt;&lt;img src=&#34;https://twoooooda.net/post/px-s1udandtvtest/5d311e1263af94d76df9b663d9203e74.png&#34;
	width=&#34;933&#34;
	height=&#34;327&#34;
	srcset=&#34;https://twoooooda.net/post/px-s1udandtvtest/5d311e1263af94d76df9b663d9203e74_hu15835533573822229167.png 480w, https://twoooooda.net/post/px-s1udandtvtest/5d311e1263af94d76df9b663d9203e74_hu3594538081316793183.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;相対パスでも良いらしい&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;285&#34;
		data-flex-basis=&#34;684px&#34;
	
&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;ここで一度TVTestを再起動しておきましょう。&lt;/strong&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h4 id=&#34;tsプロセッサー&#34;&gt;TSプロセッサー
&lt;/h4&gt;&lt;p&gt;　TVTestでテレビを見る場合の一番大事な設定といっても過言ではないのが、一番下にある &lt;strong&gt;TSプロセッサ&lt;/strong&gt; の項目です。ここが設定されていないと上手くテレビが映りません。↓の画像のように設定します。
&lt;img src=&#34;https://twoooooda.net/post/px-s1udandtvtest/43b7b2b665895a4a5b098258bfdecc1a.png&#34;
	width=&#34;778&#34;
	height=&#34;541&#34;
	srcset=&#34;https://twoooooda.net/post/px-s1udandtvtest/43b7b2b665895a4a5b098258bfdecc1a_hu14589882578513877932.png 480w, https://twoooooda.net/post/px-s1udandtvtest/43b7b2b665895a4a5b098258bfdecc1a_hu16179620160789115046.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;143&#34;
		data-flex-basis=&#34;345px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;とりあえず見れるはず&#34;&gt;とりあえず見れるはず
&lt;/h4&gt;&lt;p&gt;　ここまで設定すれば、TVTestのウィンドウの左下から適切なBonDriverを選ぶだけでとりあえずテレビが見れるはずです。
&lt;img src=&#34;https://twoooooda.net/post/px-s1udandtvtest/6b52fc2a26d4b0f315a47dd19c779564.png&#34;
	width=&#34;226&#34;
	height=&#34;330&#34;
	srcset=&#34;https://twoooooda.net/post/px-s1udandtvtest/6b52fc2a26d4b0f315a47dd19c779564_hu805742135431400015.png 480w, https://twoooooda.net/post/px-s1udandtvtest/6b52fc2a26d4b0f315a47dd19c779564_hu16517868978112356756.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;68&#34;
		data-flex-basis=&#34;164px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;tvtestを使う&#34;&gt;TVTestを使う
&lt;/h2&gt;&lt;h3 id=&#34;チャンネルスキャン&#34;&gt;チャンネルスキャン
&lt;/h3&gt;&lt;p&gt;　このままでは不便なので、設定からチャンネルスキャンをしましょう。これが正常に完了すると、TVTestウィンドウの左下の&amp;lt;チャンネル&amp;gt;のプルダウンからチャンネルを選択して、番組を視聴することができます。
&lt;img src=&#34;https://twoooooda.net/post/px-s1udandtvtest/923ec1cc2a7143c847997ae3e89d31ab.png&#34;
	width=&#34;1295&#34;
	height=&#34;856&#34;
	srcset=&#34;https://twoooooda.net/post/px-s1udandtvtest/923ec1cc2a7143c847997ae3e89d31ab_hu3462801882777950841.png 480w, https://twoooooda.net/post/px-s1udandtvtest/923ec1cc2a7143c847997ae3e89d31ab_hu12592607550023559722.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;151&#34;
		data-flex-basis=&#34;363px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;エラー表示&#34;&gt;エラー表示
&lt;/h3&gt;&lt;p&gt;　テレビが映らない、何かがおかしいと思ったら、下のエラー表示を見てみるといいかもしれません。特に、B-CASカードによる復号ががうまく動いていない時は &lt;strong&gt;S&lt;/strong&gt; の値が爆増していくので、目安程度にはなります。
&lt;img src=&#34;https://twoooooda.net/post/px-s1udandtvtest/c6ffb245329bae27efb690b44ae45dd6.png&#34;
	width=&#34;178&#34;
	height=&#34;72&#34;
	srcset=&#34;https://twoooooda.net/post/px-s1udandtvtest/c6ffb245329bae27efb690b44ae45dd6_hu12849848388694388433.png 480w, https://twoooooda.net/post/px-s1udandtvtest/c6ffb245329bae27efb690b44ae45dd6_hu6223721869698166739.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;247&#34;
		data-flex-basis=&#34;593px&#34;
	
&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;とりあえず以上です。これはあくまでPX-S1UDとPCでテレビを見るための最短手順ですので、TVTestの設定などを練ればもっと便利に使えるはずです。&lt;/p&gt;
&lt;h2 id=&#34;202407-追記&#34;&gt;2024/07 追記
&lt;/h2&gt;&lt;p&gt;ある日TVTestでテレビを見ようとしたら、「BonDriverの初期化ができません」云々といったエラーが出てテレビが見られなくなってしまいました。
いろいろ調べて、試した方法を書き残しておきます。&lt;/p&gt;
&lt;h3 id=&#34;biosの項目を設定&#34;&gt;BIOSの項目を設定
&lt;/h3&gt;&lt;p&gt;どうもBIOSのある設定が悪さをしているようで、Advancedメニューの中にある「&lt;strong&gt;Above 4GB Decoding&lt;/strong&gt;」という設定をDisableにすると改善することがあるそうです。&lt;/p&gt;
&lt;h3 id=&#34;デバイスセキュリティの項目を設定&#34;&gt;デバイスセキュリティの項目を設定
&lt;/h3&gt;&lt;p&gt;デバイスマネージャーを見ると、そもそもPX-S1UDを認識していなかったり、ドライバが動いていなかったりで不安定な状態でした。こういう場合はWindowsセキュリティの設定 → デバイスセキュリティ → コア分離 → &lt;strong&gt;メモリ整合性&lt;/strong&gt; という項目をオフにすると認識するようになるそうです。&lt;/p&gt;
&lt;p&gt;以上の二点を試したところ、正常に見られようになりました。どちらがクリティカルな解決策だったのかはよくわかりませんが、私の環境ではこれで動くようになりました。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>エムピウ ミッレフォッリエを買ったら良すぎた話</title>
        <link>https://twoooooda.net/post/millefoglie-is-so-good/</link>
        <pubDate>Mon, 22 May 2023 00:00:00 +0000</pubDate>
        
        <guid>https://twoooooda.net/post/millefoglie-is-so-good/</guid>
        <description>&lt;img src="https://twoooooda.net/post/millefoglie-is-so-good/IMG_5159.jpeg" alt="Featured image of post エムピウ ミッレフォッリエを買ったら良すぎた話" /&gt;&lt;h2 id=&#34;最近財布を新調しました&#34;&gt;最近財布を新調しました
&lt;/h2&gt;&lt;p&gt;　今まではずっと長財布を使っていたのですが、昨今のキャッシュレスの波で現金を使わなくなり、だんだんと「なんでこんなデカい財布を持ち歩いてるんだ」と思うようになりました。
先代の財布を使い始めて既に4年くらい経過していたので、この機に小さい財布に変えようと思って探していると行きついたのが &lt;strong&gt;m+（エムピウ）&lt;/strong&gt; というブランドの &lt;strong&gt;millefoglie（ミッレフォッリエ）&lt;/strong&gt; という財布でした。&lt;!-- raw HTML omitted --&gt;
&lt;a class=&#34;link&#34; href=&#34;https://m-piu.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;エムピウ公式サイト&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;エムピウ-ミッレフォッリエとは&#34;&gt;エムピウ ミッレフォッリエとは
&lt;/h2&gt;&lt;p&gt;　ミッレフォッリエの「ミッレ」とは「千」、「フォリエ」とは「葉」を意味し、財布を横から見ると葉っぱが重なっているように見えることから名づけられたようです。
外側はぐるっと一枚の牛革で覆われており、ファスナーなどではなく二つの真鍮製のギボシでとめる形式です。
中身の構造はかなり独特で、カードポケットの下側にコインボックス、その下に札やレシートを挟みこんでカードフラップで抑えるような形です。&lt;/p&gt;
&lt;p&gt;　コインボックスは大きく開き、小銭の確認がとてもしやすい構造です。カードポケットは三つあり、それぞれに5枚ずつ、合計15枚程度まで入るようです。カードフラップに交通系ICとかを入れるとそのままかざして改札を通れます。
&lt;img src=&#34;https://twoooooda.net/post/millefoglie-is-so-good/IMG_5165.jpeg&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/millefoglie-is-so-good/IMG_5165_hu1932072527871191655.jpeg 480w, https://twoooooda.net/post/millefoglie-is-so-good/IMG_5165_hu3145073993754885107.jpeg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;二つのギボシでとまっています&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;img src=&#34;https://twoooooda.net/post/millefoglie-is-so-good/IMG_5160.jpeg&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/millefoglie-is-so-good/IMG_5160_hu11695743593637958896.jpeg 480w, https://twoooooda.net/post/millefoglie-is-so-good/IMG_5160_hu1070227448308795108.jpeg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;開いたときのようす。青いカードが入っているのがカードフラップ&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;img src=&#34;https://twoooooda.net/post/millefoglie-is-so-good/IMG_5166.jpeg&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/millefoglie-is-so-good/IMG_5166_hu12660560551899867077.jpeg 480w, https://twoooooda.net/post/millefoglie-is-so-good/IMG_5166_hu7550179685487323390.jpeg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;実際に会計するときは自然とこういう持ち方になります&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;買ったモデル&#34;&gt;買ったモデル
&lt;/h2&gt;&lt;p&gt;　私が買ったのは牛革の中でもプエブロレザーというレザーを使った &lt;strong&gt;millefoglie P25 PU.grigio&lt;/strong&gt; です。
プエブロレザーとは牛革に敢えてやすりで傷をつける加工を施したレザーで、特に経年変化が早い上に変化の度合いが激しいことが特徴です。
&lt;a class=&#34;link&#34; href=&#34;https://youtu.be/0zmorHUODE4&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;この動画&lt;/a&gt;を見て頂くといかに変化が激しいかがわかると思います。&lt;/p&gt;
&lt;p&gt;　なお、このミッレフォッリエは全国的に品薄で、新品はほとんど市場に出回っていないというお話でした（2023年5月現在）。私が買ったものは僅かな不良で新品として市場に出なかったアウトレット品らしく、その在庫があったのも幸運だったようです。ちなみにアウトレットになった理由は聞きそびれたので、どこが不良なのかは今でもわかっていません。
&lt;a class=&#34;link&#34; href=&#34;https://www.free-spirits.co.jp/fs/mens/wallet00178&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;販売サイト&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ミッレフォッリエの良いところ&#34;&gt;ミッレフォッリエの良いところ
&lt;/h2&gt;&lt;p&gt;　一番はやはり &lt;strong&gt;コンパクトである&lt;/strong&gt; ということです。少し厚みはありますが、サイズ感はほとんどパスケースと大差なく、このサイズにかなりの量の現金とカード類を一緒に収納できる収納力も魅力です。&lt;/p&gt;
&lt;p&gt;　あとは、何といっても &lt;strong&gt;質感&lt;/strong&gt; ！！丁寧に鞣された牛革を撫でるだけでもテンションが上がります。また、革の経年変化も楽しみのうちです。使っていくうちに革に光沢と傷が入り色も深みを増し、自分だけの財布に育てていく感じが、私は大好きです。&lt;/p&gt;
&lt;h2 id=&#34;ミッレフォッリエのイマイチなところ&#34;&gt;ミッレフォッリエのイマイチなところ
&lt;/h2&gt;&lt;p&gt;　コンパクト財布なので、外出先で不意に小銭が増えてしまうと、露骨に膨らんでしまうところは少し残念です。20枚以上とかになってしまうと閉まりきらないこともあるようです。また、一般的な長財布と違いカードポケットのカードを上から覗くことになるので、一覧性は落ちてしまいます。この点に関しては、三つのカードポケットに入れるカードを固定することで対応しています。
&lt;img src=&#34;https://twoooooda.net/post/millefoglie-is-so-good/IMG_5167.jpeg&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/millefoglie-is-so-good/IMG_5167_hu2924046635318788769.jpeg 480w, https://twoooooda.net/post/millefoglie-is-so-good/IMG_5167_hu6699803787429131919.jpeg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;小銭10枚、カード10枚、札5枚程度入れた場合だいたい3cmくらい&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;img src=&#34;https://twoooooda.net/post/millefoglie-is-so-good/IMG_5168.jpeg&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/millefoglie-is-so-good/IMG_5168_hu10426199626982992809.jpeg 480w, https://twoooooda.net/post/millefoglie-is-so-good/IMG_5168_hu3181528724030353146.jpeg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;カードポケットは意外と深く、いざという時にたまにモタモタする（ボタンの金具でカードが傷つかないために、ダークソウルシリーズの「ダークリング」のシールを貼っている）&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;まとめ-ミッレフォッリエマジでいい&#34;&gt;まとめ ミッレフォッリエマジでいい
&lt;/h2&gt;&lt;p&gt;　いろいろ書いてきましたが、総合するとめちゃくちゃ良いです。質感が良いので特に意味もなく開けたり閉めたりしてしまうくらいです。財布として割と独特な見た目、形状をしているので、人とはちょっと変わった財布を持ちたい人、カードも現金も使う機会がある程度多い人などは特にオススメです。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>もらった左手デバイスのキースイッチを改造した話</title>
        <link>https://twoooooda.net/post/remodeled-left-hand-device/</link>
        <pubDate>Tue, 18 Oct 2022 00:00:00 +0000</pubDate>
        
        <guid>https://twoooooda.net/post/remodeled-left-hand-device/</guid>
        <description>&lt;img src="https://twoooooda.net/post/remodeled-left-hand-device/IMG_4369.JPEG" alt="Featured image of post もらった左手デバイスのキースイッチを改造した話" /&gt;&lt;p&gt;　先日友人からAキーが利かなくなったゲーム用の左手デバイスをもらったので、修繕して使うつもりでしたが、ついでに改造することにしました（私の嫌いな青軸キースイッチだったので）。&lt;/p&gt;
&lt;h2 id=&#34;デバイスと初期状態&#34;&gt;デバイスと初期状態
&lt;/h2&gt;&lt;p&gt;　もらった左手デバイスはアマゾンでよく見る&lt;a class=&#34;link&#34; href=&#34;https://amzn.asia/d/5EQnRBB&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;こういうやつ&lt;/a&gt;でした。いかにも中華製でしたが別段欠陥があるとかではなく、もらった時点でもAキーが利かない以外特に問題なく使えました。
&lt;img src=&#34;https://twoooooda.net/post/remodeled-left-hand-device/IMG_4354.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/remodeled-left-hand-device/IMG_4354_hu4982763455350043413.JPEG 480w, https://twoooooda.net/post/remodeled-left-hand-device/IMG_4354_hu11962338364537176025.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;もらった時の状態（分解途中）&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;  &lt;img src=&#34;https://twoooooda.net/post/remodeled-left-hand-device/IMG_4355.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/remodeled-left-hand-device/IMG_4355_hu11209593764991492625.JPEG 480w, https://twoooooda.net/post/remodeled-left-hand-device/IMG_4355_hu16012140687106727749.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;キーキャップを取ったところ&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;分解&#34;&gt;分解
&lt;/h2&gt;&lt;p&gt;　分解も特に問題なくできました。ネジの形が特殊とか、引っかかってるツメが頑強だったとかもなく、一部のゴム足をはがすだけでネジも全て回せました。
&lt;img src=&#34;https://twoooooda.net/post/remodeled-left-hand-device/IMG_4353.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/remodeled-left-hand-device/IMG_4353_hu2625459714399973164.JPEG 480w, https://twoooooda.net/post/remodeled-left-hand-device/IMG_4353_hu3824087091339768804.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;分解中&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;キースイッチ摘出&#34;&gt;キースイッチ摘出
&lt;/h2&gt;&lt;p&gt;　中を開けてみると、案の定キースイッチは全てはんだ付けされていました。めんどくさいなー&amp;hellip;と思いつつも、ホットスワップ式（はんだ付け無しでキースイッチを固定できる仕組み）の可能性は最初から考えていなかったので、大人しくはんだを吸い取りながら35個あったキースイッチを全て取り外しました。
&lt;img src=&#34;https://twoooooda.net/post/remodeled-left-hand-device/IMG_4356.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/remodeled-left-hand-device/IMG_4356_hu7408196546390633619.JPEG 480w, https://twoooooda.net/post/remodeled-left-hand-device/IMG_4356_hu8747940185719260103.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;スイッチ摘出中&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;  &lt;img src=&#34;https://twoooooda.net/post/remodeled-left-hand-device/IMG_4358.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/remodeled-left-hand-device/IMG_4358_hu10580932547522536025.JPEG 480w, https://twoooooda.net/post/remodeled-left-hand-device/IMG_4358_hu13717457880813948307.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;はんだごての先が曲がるというアクシデントも&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;  &lt;img src=&#34;https://twoooooda.net/post/remodeled-left-hand-device/IMG_4359.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/remodeled-left-hand-device/IMG_4359_hu8692522970062655586.JPEG 480w, https://twoooooda.net/post/remodeled-left-hand-device/IMG_4359_hu9858446782124248072.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;全摘完了&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;新しいキースイッチ選定&#34;&gt;新しいキースイッチ選定
&lt;/h2&gt;&lt;p&gt;　自分は普段&lt;a class=&#34;link&#34; href=&#34;https://twoooooda.net/post/keybord-built-by-myself/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;いつしかの記事&lt;/a&gt;で作ったキーボードを使っていて、これには &lt;strong&gt;FEKER like Holy Panda&lt;/strong&gt; というタクタイルのキースイッチを採用しています。タクタイルのキースイッチは文字を打つにはちょうどいいのですが、ゲームにはあまり向かないなぁと個人的に思っていたので（Holy Pandaの押下圧が気持ち重めだったのもある）、今回はゲーム用に使う予定だったのでリニアスイッチにすることにしました。
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;　最終的には &lt;strong&gt;Tecsee Jaditeキースイッチ&lt;/strong&gt; というリニアキースイッチを採用しました。&lt;a class=&#34;link&#34; href=&#34;https://talpkeyboard.net/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;TALP KEYBOARD&lt;/a&gt;さんという国内のサイトで買ったのですが、現在（2022年10月時点）は取り扱いが無いようです。
&lt;img src=&#34;https://twoooooda.net/post/remodeled-left-hand-device/FakwZqmakAAGSgH.jpg&#34;
	width=&#34;1113&#34;
	height=&#34;392&#34;
	srcset=&#34;https://twoooooda.net/post/remodeled-left-hand-device/FakwZqmakAAGSgH_hu15620241380101416614.jpg 480w, https://twoooooda.net/post/remodeled-left-hand-device/FakwZqmakAAGSgH_hu14666176322794601842.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;かつての商品ページ&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;283&#34;
		data-flex-basis=&#34;681px&#34;
	
&gt; &lt;img src=&#34;https://twoooooda.net/post/remodeled-left-hand-device/IMG_4361.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/remodeled-left-hand-device/IMG_4361_hu4676190253088487754.JPEG 480w, https://twoooooda.net/post/remodeled-left-hand-device/IMG_4361_hu5641989024986227925.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;梱包のようす&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;  &lt;img src=&#34;https://twoooooda.net/post/remodeled-left-hand-device/IMG_4362.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/remodeled-left-hand-device/IMG_4362_hu1719691650578098291.JPEG 480w, https://twoooooda.net/post/remodeled-left-hand-device/IMG_4362_hu18193289375383925315.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;エメラルドグリーンがミクさんみたいでキレイ&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;ここで問題が&#34;&gt;ここで問題が
&lt;/h3&gt;&lt;p&gt;　届いたのでさぁ取り付けようと思ったのですが、なんとキースイッチが5ピンのタイプで、基板に刺さりませんでした&amp;hellip;クッソめんどくさかったのですが、泣く泣く5ピンのうち2ピンをニッパーで切り取るということを全てのキースイッチにしました。
&lt;img src=&#34;https://twoooooda.net/post/remodeled-left-hand-device/IMG_4363.JPEG&#34;
	width=&#34;497&#34;
	height=&#34;346&#34;
	srcset=&#34;https://twoooooda.net/post/remodeled-left-hand-device/IMG_4363_hu1936981199775307480.JPEG 480w, https://twoooooda.net/post/remodeled-left-hand-device/IMG_4363_hu1834433309681056809.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;見ての通り5ピン&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;143&#34;
		data-flex-basis=&#34;344px&#34;
	
&gt; &lt;img src=&#34;https://twoooooda.net/post/remodeled-left-hand-device/IMG_4364.JPEG&#34;
	width=&#34;1536&#34;
	height=&#34;2048&#34;
	srcset=&#34;https://twoooooda.net/post/remodeled-left-hand-device/IMG_4364_hu1710015308972730237.JPEG 480w, https://twoooooda.net/post/remodeled-left-hand-device/IMG_4364_hu1568578536593907312.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;見てのとおり5ピンが刺さらない&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;75&#34;
		data-flex-basis=&#34;180px&#34;
	
&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;せっかくなのでlubeも&#34;&gt;せっかくなのでlubeも
&lt;/h2&gt;&lt;p&gt;　前回キーボード自作した時のグリスが残っていたので、せっかくなのでlubeもしておきました。今回はたったの35キーだったので、比較的楽でした（前回は98キー）。
&lt;img src=&#34;https://twoooooda.net/post/remodeled-left-hand-device/IMG_4367.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/remodeled-left-hand-device/IMG_4367_hu6652936187906378855.JPEG 480w, https://twoooooda.net/post/remodeled-left-hand-device/IMG_4367_hu12296295055643296677.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;去年の年末の記憶が&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;スイッチ取り付け&#34;&gt;スイッチ取り付け
&lt;/h2&gt;&lt;p&gt;　もう後ははんだ付けするだけです。コツをつかめばスイッチの摘出も取り付けもすぐに終わりました。
&lt;img src=&#34;https://twoooooda.net/post/remodeled-left-hand-device/IMG_4368.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/remodeled-left-hand-device/IMG_4368_hu17785855746562003270.JPEG 480w, https://twoooooda.net/post/remodeled-left-hand-device/IMG_4368_hu14487467832423600098.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;はんだづけ中&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;完成&#34;&gt;完成
&lt;/h2&gt;&lt;p&gt;　組み立てて完成です。5ピンから3ピンに減らす過程でキースイッチを一個ダメにしてしまったので、Caps Lockキーだけ元の青軸スイッチのままになっています。
&lt;img src=&#34;https://twoooooda.net/post/remodeled-left-hand-device/IMG_4371.JPEG&#34;
	width=&#34;492&#34;
	height=&#34;350&#34;
	srcset=&#34;https://twoooooda.net/post/remodeled-left-hand-device/IMG_4371_hu1874054994558407709.JPEG 480w, https://twoooooda.net/post/remodeled-left-hand-device/IMG_4371_hu16865980546296524707.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;ダメにしたスイッチ。端子の片方を切り取っちゃった&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;140&#34;
		data-flex-basis=&#34;337px&#34;
	
&gt; &lt;img src=&#34;https://twoooooda.net/post/remodeled-left-hand-device/IMG_4369.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/remodeled-left-hand-device/IMG_4369_hu2768802411097345068.JPEG 480w, https://twoooooda.net/post/remodeled-left-hand-device/IMG_4369_hu17184126946030052471.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;取り付け後&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;使用感&#34;&gt;使用感
&lt;/h2&gt;&lt;p&gt;　やっぱりゲームにはリニア軸ですね（個人の意見）。lubeもしたので音も静かで良い感じです。ただ元が安価なデバイスなので、節々にチープな点が見えたり、軽いプラスチックの外装なので底打ちの音が微妙だったりしますが、総合的には改造してよかったなと思います。
&lt;img src=&#34;https://twoooooda.net/post/remodeled-left-hand-device/IMG_4372.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/remodeled-left-hand-device/IMG_4372_hu13304806143293818847.JPEG 480w, https://twoooooda.net/post/remodeled-left-hand-device/IMG_4372_hu4270317429819275920.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>atcoder-cliを導入してみた</title>
        <link>https://twoooooda.net/post/introduce-atcoder-cli/</link>
        <pubDate>Fri, 20 May 2022 00:00:00 +0000</pubDate>
        
        <guid>https://twoooooda.net/post/introduce-atcoder-cli/</guid>
        <description>&lt;h2 id=&#34;いきさつ&#34;&gt;いきさつ
&lt;/h2&gt;&lt;p&gt;　ここ最近、諸事情あって競技プログラミングで有名なAtCoderに参戦したのですが、AtCoderのwebページでポチポチコーディングするのも、別のエディタで書いてコピペするのもなんだかなぁという感じだったので、友人が使っていた&lt;strong&gt;atcoder-cli&lt;/strong&gt;というものを導入して使ってみることにしました。なお、この記事は以下の参考文献から大いに引用しています。&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;strong&gt;参考文献&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://scrapbox.io/hitech/%F0%9F%8F%83_AtCoder_%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89_for_Python&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;AtCoder 環境構築 for Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://tatamo.81.la/blog/2018/12/07/atcoder-cli/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;コマンドラインツールatcoder-cliを公開しました（作成者様のサイト）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://tatamo.81.la/blog/2018/12/07/atcoder-cli-tutorial/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;atcoder-cli チュートリアル（作成者様謹製のチュートリアル）&lt;/a&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;atcoder-cliとは&#34;&gt;atcoder-cliとは？
&lt;/h2&gt;&lt;p&gt;　atcoder-cliとは、コンソールから短いコマンドを打つだけで問題の提出のみならず、使用する各言語に合わせたテンプレートの自動展開、作業フォルダ、ファイルの整理、テストケースの自動ダウンロード、検証などを簡単に行えるツールです。この記事では、基本的に&lt;strong&gt;Python&lt;/strong&gt;でAtCoderに参戦することを前提に進めていきます。&lt;/p&gt;
&lt;h2 id=&#34;導入方法&#34;&gt;導入方法
&lt;/h2&gt;&lt;p&gt;　基本的には&lt;a class=&#34;link&#34; href=&#34;http://tatamo.81.la/blog/2018/12/07/atcoder-cli-tutorial/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;さっきのチュートリアル&lt;/a&gt;に従ってatcoder-cliと、セットでほぼ使うであろう &lt;strong&gt;online-judge-tools&lt;/strong&gt;も一緒にインストールします。ちなみに、atcoder-cliはJavaScriptのパッケージマネージャであるnpmでインストールするので、npmが入っていない方はそちらを先にやってしまいましょう。&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://dev.macha795.com/windows10-node-js-npm-install/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Node.js・npmのインストール&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;環境&#34;&gt;環境
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Python（Anaconda）&lt;/th&gt;
          &lt;th&gt;3.8.8&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;pip&lt;/td&gt;
          &lt;td&gt;22.0.4&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;npm&lt;/td&gt;
          &lt;td&gt;6.14.6&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;インストール&#34;&gt;インストール
&lt;/h3&gt;&lt;p&gt;　online-judge-toolsとatcoder-cliのインストールには、以下のコマンドを実行します。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; &amp;gt; pip install online-judge-tools
 &amp;gt; npm install -g atcoder-cli
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;そして、以下のコマンドが使用できればインストールされています。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; acc -h
&lt;/code&gt;&lt;/pre&gt;&lt;!-- raw HTML omitted --&gt;
&lt;h3 id=&#34;ログイン&#34;&gt;ログイン
&lt;/h3&gt;&lt;p&gt;　atcoder-cliとonline-judge-toolsの両方ログインする必要があります。以下のコマンドを叩いた後にAtCoderのユーザー名とパスワードを入力します。まずはonline-judge-toolsの方から。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; oj login https://atcoder.jp/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;次にatcoder-cliの方にログイン。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; acc login
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ここで、Linux等のCUIに普段から触れていると慣れているかもしれませんが、パスワードを入れる時に一見して入力できていないように見えるかもしれません。が、見えないようになっているだけで入力できています、大丈夫です。&lt;/p&gt;
&lt;h3 id=&#34;configファイルの編集&#34;&gt;Configファイルの編集
&lt;/h3&gt;&lt;p&gt;　問題を解くときに、毎回main.pyの作成や問題用ディレクトリを作るのは面倒なので、自動化します。そのためにConfig.jsonを編集します。まずはConfigの場所の確認から。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; acc config-dir
C:\Users\&amp;lt;username&amp;gt;\AppData\Roaming\atcoder-cli-nodejs\Config
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;環境によってファイルの場所はまちまちになるかと思います。ファイルを開いて、以下みたいな感じに&lt;code&gt;&amp;quot;default-test-dirname-format&amp;quot;&lt;/code&gt;と&lt;code&gt;&amp;quot;default-template&amp;quot;:&amp;quot;python&amp;quot;&lt;/code&gt;を変更します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;oj-path&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;C:\\ProgramData\\Anaconda3\\Scripts\\oj.exe&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;default-contest-dirname-format&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;{ContestID}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;default-task-dirname-format&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;{tasklabel}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;default-test-dirname-format&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;default-task-choice&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;inquire&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;default-template&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;python&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;次に、上のConfig.jsonがあった&lt;code&gt;Config&lt;/code&gt;フォルダに&lt;code&gt;python&lt;/code&gt;フォルダを作り、その中に&lt;code&gt;main.py&lt;/code&gt;と&lt;code&gt;template.json&lt;/code&gt;を作ります。&lt;code&gt;main.py&lt;/code&gt;の中身は空でも大丈夫で、&lt;code&gt;template.json&lt;/code&gt;は以下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;nt&#34;&gt;&amp;#34;task&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         &lt;span class=&#34;nt&#34;&gt;&amp;#34;program&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;             &lt;span class=&#34;s2&#34;&gt;&amp;#34;main.py&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         &lt;span class=&#34;nt&#34;&gt;&amp;#34;submit&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;main.py&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;使ってみる&#34;&gt;使ってみる
&lt;/h2&gt;&lt;h3 id=&#34;解答用フォルダ作成&#34;&gt;解答用フォルダ作成
&lt;/h3&gt;&lt;p&gt;　ようやく使用法編です。今回は&lt;code&gt;C:\Users\&amp;lt;username&amp;gt;&lt;/code&gt;の中に&lt;code&gt;atcoder&lt;/code&gt;というフォルダを作り、その中で作業することとします（ここは自由です）。問題は仮にabc250のa問題を解くとしましょう。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; cd atcoder
&amp;gt; acc new abc250
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;&amp;gt; acc new abc000&lt;/code&gt;でその回の解答用フォルダとテストケースのダウンロードが可能です。すると以下のように問題のリストが表示され、Spaceキーで問題の選択、Enterキーでフォルダ作成ができます。aキー -&amp;gt; Enterで全問を一括で選択できます。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;abc250/contest.acc.json created.
create project of AtCoder Beginner Contest 250
? select tasks (Press &amp;lt;space&amp;gt; to select, &amp;lt;a&amp;gt; to toggle all, &amp;lt;i&amp;gt; to invert selection)
&amp;gt;(*) A Adjacent Squares
 ( ) B Enlarged Checker Board
 ( ) C Adjacent Swaps
 ( ) D 250-like Number
 ( ) E Prefix Equality
 ( ) F One Fourth
 ( ) G Stonks
(Move up and down to reveal more choices)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;仮に全選択すると解答用フォルダはこんな感じになっているかと思います。a問題を解くときは、&lt;code&gt;a&lt;/code&gt;フォルダにある&lt;code&gt;main.py&lt;/code&gt;にコードを書いていきます。
&lt;img src=&#34;https://twoooooda.net/post/introduce-atcoder-cli/2022-05-21.png&#34;
	width=&#34;316&#34;
	height=&#34;667&#34;
	srcset=&#34;https://twoooooda.net/post/introduce-atcoder-cli/2022-05-21_hu4805595019298944967.png 480w, https://twoooooda.net/post/introduce-atcoder-cli/2022-05-21_hu6327058566040865519.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;47&#34;
		data-flex-basis=&#34;113px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;解答テストケース検証&#34;&gt;解答、テストケース検証
&lt;/h3&gt;&lt;p&gt;　&lt;code&gt;main.py&lt;/code&gt;に解答を書き終えたら、テストします。コンソールから&lt;code&gt;a&lt;/code&gt;フォルダに移動して、コマンドを実行します。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; cd abc250/a
&amp;gt; oj t -c &amp;#34;python main.py&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;すると、テストケースの検証結果が返ってきます。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\Users\&amp;lt;username&amp;gt;\abc250\a&amp;gt; oj t -c &amp;#34;python main.py&amp;#34;
[INFO] online-judge-tools 11.5.1 (+ online-judge-api-client 10.10.0)
[INFO] 6 cases found
[WARNING] GNU time is not available: time

[INFO] sample-1
[INFO] time: 0.065499 sec
[SUCCESS] AC

[INFO] sample-2
[INFO] time: 0.050322 sec
[SUCCESS] AC

[INFO] sample-3
[INFO] time: 0.049653 sec
[SUCCESS] AC

[INFO] sample-4
[INFO] time: 0.051948 sec
[SUCCESS] AC

[INFO] sample-5
[INFO] time: 0.046560 sec
[SUCCESS] AC

[INFO] sample-6
[INFO] time: 0.046376 sec
[SUCCESS] AC

[INFO] slowest: 0.065499 sec  (for sample-1)
[SUCCESS] test success: 6 cases
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;いい感じにACが出てていい感じですね。&lt;/p&gt;
&lt;h3 id=&#34;提出&#34;&gt;提出
&lt;/h3&gt;&lt;p&gt;　テスト結果がいい感じだったので提出します。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; acc submit main.py
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;提出に成功すると自動的にAtCoderのwebページがブラウザで開き、判定されます。そこでACをもらうと晴れて解答完了です。お疲れ様でした。&lt;/p&gt;
&lt;h3 id=&#34;問題追加&#34;&gt;問題追加
&lt;/h3&gt;&lt;p&gt;　例えば、4.1章でa問題のフォルダのみを作成したけど後にb問題以降も解きたくなったとき、&lt;code&gt;abc250&lt;/code&gt;のフォルダに戻って&lt;code&gt;acc add&lt;/code&gt;で追加ができます。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; cd ..（一つ上の階層に戻る）
&amp;gt; acc add
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;そうすると同じような問題選択画面が表示され、任意の問題を追加できます。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>AutoHotKeyを導入してみた</title>
        <link>https://twoooooda.net/post/introduce-autohotkey/</link>
        <pubDate>Tue, 04 Jan 2022 00:00:00 +0000</pubDate>
        
        <guid>https://twoooooda.net/post/introduce-autohotkey/</guid>
        <description>&lt;h2 id=&#34;導入を考えたきっかけ&#34;&gt;導入を考えたきっかけ
&lt;/h2&gt;&lt;p&gt;　&lt;a class=&#34;link&#34; href=&#34;https://twoooooda.github.io/p/%E7%A7%81%E3%81%AE%E8%87%AA%E4%BD%9C%E3%82%AD%E3%83%BC%E3%83%9C%E3%83%BC%E3%83%89%E5%A5%AE%E9%97%98%E8%A8%98/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;以前の記事&lt;/a&gt;でも述べた通り、自作キーボードに対応しているファームウェアがマジのゴミで、キー割り当てを変えられなかったので、いろいろ調べているうちにAutoHotKeyというものを見つけました。&lt;/p&gt;
&lt;h2 id=&#34;autohotkeyとは&#34;&gt;AutoHotKeyとは？
&lt;/h2&gt;&lt;p&gt;　独自のプログラミング言語を用いて、キーボードのキー操作によるかなり柔軟なショートカットの作成や、普段あまり使わないキーを全く別のキーとして割り当てたり、メディアコントロールやPCのシステム操作を割り当てたりできます。&lt;a class=&#34;link&#34; href=&#34;https://fuchiaz.com/usage-autohotkey/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;参考&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;導入方法&#34;&gt;導入方法
&lt;/h2&gt;&lt;p&gt;　基本的に&lt;a class=&#34;link&#34; href=&#34;https://fuchiaz.com/auto-hot-key/#AutoHotkey&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;このサイト&lt;/a&gt;に従ってインストールして、拡張子を&lt;code&gt;.ahk&lt;/code&gt;としたテキストファイルを作り、そこに任意のショートカットやキーの割り当てを記述していきます。記法や文法、決まりごとは&lt;a class=&#34;link&#34; href=&#34;https://so-zou.jp/software/tool/system/auto-hot-key/introduction/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;日本語のリファレンス(?)&lt;/a&gt;があるので、そちらを参照してください。&lt;/p&gt;
&lt;p&gt;　このAutoHotKeyを使う場合、拡張子が&lt;code&gt;.ahk&lt;/code&gt;のファイル、あるいは&lt;code&gt;.ahk&lt;/code&gt;のファイルから作成した&lt;code&gt;.exe&lt;/code&gt;の実行ファイルを起動し、タスクトレイで常駐させておかなければなりません。なので、PC起動時に自動で該当のファイルが起動するようにしておくと便利です。私は&lt;a class=&#34;link&#34; href=&#34;https://kiryusblog.com/autohotkey-autorun/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;こちらのサイト&lt;/a&gt;を参考に設定しました。&lt;/p&gt;
&lt;h2 id=&#34;実際に使う&#34;&gt;実際に使う
&lt;/h2&gt;&lt;p&gt;　私がこのAutoHotKeyでやりたかったのは、&amp;quot;&lt;strong&gt;キーボード右上のPageUp、PageDownのキーをメディアの再生一時停止、次の曲ボタンへ割り当て&lt;/strong&gt;&amp;quot; です。実際のコードはごく簡単なもので、以下のように書いたら思った通りに動いてくれました。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#InstallKeybdHook
#UseHook

PgUp::Media_Play_Pause
PgDn::Media_Next
return
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;また、便利だと聞いたので&lt;a class=&#34;link&#34; href=&#34;https://www.karakaram.com/alt-ime-on-off/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;こちらのサイト&lt;/a&gt;を参考に、左右Altの空打ちで日本語入力と英字入力を切り変えられるようにしました。私は起動しないといけない実行ファイルが増えると嫌なので、実際に使うときはPageUp/Downキーをメディアコントロールに割り当てるコードと、&lt;code&gt;alt-ime-ahk.ahk&lt;/code&gt;の内容を一つのファイルに統合しています(ファイル名を&lt;code&gt;general.ahk&lt;/code&gt;としています)。&lt;/p&gt;
&lt;h2 id=&#34;導入してみて&#34;&gt;導入してみて
&lt;/h2&gt;&lt;p&gt;　導入してしばらく使ってみましたが、&lt;strong&gt;とてもとても便利です。&lt;/strong&gt; タスクトレイに入るアイコンが一つ増えるのが最初は少し抵抗がありましたが。それを補って余りある恩恵を受けています。今後新しくショートカットが欲しくなったり、割り当てを変えたい時が来れば今使っている&lt;code&gt;general.ahk&lt;/code&gt;ファイルに追記すればいいだけなので、使い方を多少覚えていればこれからもっと気軽に便利にしていくことができると思います。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>私の自作キーボード奮闘記</title>
        <link>https://twoooooda.net/post/keybord-built-by-myself/</link>
        <pubDate>Mon, 03 Jan 2022 00:00:00 +0000</pubDate>
        
        <guid>https://twoooooda.net/post/keybord-built-by-myself/</guid>
        <description>&lt;img src="https://twoooooda.net/post/keybord-built-by-myself/IMG_4085.JPEG" alt="Featured image of post 私の自作キーボード奮闘記" /&gt;&lt;p&gt;しばらく前から&lt;strong&gt;自作キーボード&lt;/strong&gt;の沼というものに興味があり、年が明けたら入るお年玉をアテに思い切って作ってみることにしました。&lt;/p&gt;
&lt;h2 id=&#34;用いたパーツ&#34;&gt;用いたパーツ
&lt;/h2&gt;&lt;h3 id=&#34;pcbケース&#34;&gt;PCB、ケース
&lt;/h3&gt;&lt;p&gt;　ケース、基板、プレート等がセットになっている&lt;a class=&#34;link&#34; href=&#34;https://ja.aliexpress.com/item/1005002964011779.html?spm=a2g0o.9042311.0.0.56ca4c4dMvOJNG&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Tom980&lt;/a&gt;というコンパクトなフルサイズキーボード自作キット(98キー)を買いました。フルカラーLEDつき、ホットスワップ方式ではんだ付けがいらないというのも高得点です。安価ながらなかなかいいキットだと思います。アリエクスプレスで買いました。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://twoooooda.net/post/keybord-built-by-myself/IMG_4072.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/keybord-built-by-myself/IMG_4072_hu6734024128996654418.JPEG 480w, https://twoooooda.net/post/keybord-built-by-myself/IMG_4072_hu3446076695289971344.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;本体&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt; &lt;img src=&#34;https://twoooooda.net/post/keybord-built-by-myself/IMG_4076.JPEG&#34;
	width=&#34;1536&#34;
	height=&#34;2048&#34;
	srcset=&#34;https://twoooooda.net/post/keybord-built-by-myself/IMG_4076_hu11540593391933636144.JPEG 480w, https://twoooooda.net/post/keybord-built-by-myself/IMG_4076_hu1432631637664328081.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;付属品(見切れてる方は普通のUSB端子です)&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;75&#34;
		data-flex-basis=&#34;180px&#34;
	
&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;しかしこのキーボードキット、汎用のファームウェアであるQMKファームウェアに対応していない代わりに独自のファームウェアがあり、そちらにのみ対応しているようです。&lt;a class=&#34;link&#34; href=&#34;https://www.reddit.com/r/MechanicalKeyboards/comments/ox075j/holy_tom980_wianxp_980_review/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;redditのレビュー&lt;/a&gt;に落ちていました。が、レビュー曰く、このファームウェアは &amp;ldquo;&lt;strong&gt;almost complete garbage(ほぼ完全にゴミ)&lt;/strong&gt;&amp;rdquo; らしく、実際に使ってみても確かにゴミでした。具体的には、LEDの発光パターンや色は変えられるけど、特定のキーに別の役割を当てたり、マクロを割り当てたりなどがほぼ完全に機能していません。さらに(これは私だけの環境かもしれませんが)なぜか&lt;strong&gt;ESCキーが右Winキーになって&lt;/strong&gt;しまっていたりでなかなかよくわからん挙動をしています(これはPC内の別のソフトウェアでなんとかした)。それ以外は概ね満足です。&lt;/p&gt;
&lt;h3 id=&#34;キースイッチ&#34;&gt;キースイッチ
&lt;/h3&gt;&lt;p&gt;　キースイッチはいろいろ考えた結果、界隈では有名らしいHoly Pandaという高級タクタイルキースイッチの&lt;strong&gt;廉価版&lt;/strong&gt;である&lt;a class=&#34;link&#34; href=&#34;https://talpkeyboard.net/items/5fd61629b00aa37e7271319d&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;FEKER like Holy Panda&lt;/a&gt;を採用しました。リンクから飛べるTALP KEYBORDという国内の自作キーボード専門店から購入しました。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://twoooooda.net/post/keybord-built-by-myself/IMG_4021.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/keybord-built-by-myself/IMG_4021_hu11089450463664370739.JPEG 480w, https://twoooooda.net/post/keybord-built-by-myself/IMG_4021_hu946818603445860844.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;100個買った&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt; &lt;img src=&#34;https://twoooooda.net/post/keybord-built-by-myself/IMG_4022.JPG&#34;
	width=&#34;3520&#34;
	height=&#34;1980&#34;
	srcset=&#34;https://twoooooda.net/post/keybord-built-by-myself/IMG_4022_hu3527572336858205517.JPG 480w, https://twoooooda.net/post/keybord-built-by-myself/IMG_4022_hu9353838730605749287.JPG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;形状はCherry MX準拠&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;押下圧は公称で67gとなっており、少々重めです。分類はタクタイルとなっており、心地よいタイピング音とサクサク感のある押し心地でかなり好印象です。多少の個体差はあるものの買った100個すべてのスイッチがきちんと動作しており、品質も問題なしでした。TALP KEYBORDさんありがとうございました。&lt;/p&gt;
&lt;h3 id=&#34;キーキャップ&#34;&gt;キーキャップ
&lt;/h3&gt;&lt;p&gt;　キーキャップは、アリエクスプレスで見つけたこの&lt;a class=&#34;link&#34; href=&#34;https://ja.aliexpress.com/item/1005001622318975.html?spm=a2g0o.9042311.0.0.56ca4c4dMvOJNG&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;可愛いキーキャップ&lt;/a&gt;をほぼ即決で採用しました。全体的にデザインがめちゃくちゃ好みで、キャップの種類も豊富で実物のクオリティもそれなりに高く満足しているのですが、届いたパッケージにはラベルも何もなく、ストアページも何か後ろめたいことがありそうな感じなので、まぁおそらく正規品ではないのでしょう。クリプトンフューチャーメディア等の初音ミク公式から発売されたらそちらに買い換えようと思います。
&lt;img src=&#34;https://twoooooda.net/post/keybord-built-by-myself/IMG_4086.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/keybord-built-by-myself/IMG_4086_hu8938142860455091927.JPEG 480w, https://twoooooda.net/post/keybord-built-by-myself/IMG_4086_hu8338221947149424353.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;可愛い～&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt; &lt;img src=&#34;https://twoooooda.net/post/keybord-built-by-myself/IMG_4090.jpeg&#34;
	width=&#34;1536&#34;
	height=&#34;2048&#34;
	srcset=&#34;https://twoooooda.net/post/keybord-built-by-myself/IMG_4090_hu6021007297013172579.jpeg 480w, https://twoooooda.net/post/keybord-built-by-myself/IMG_4090_hu7225848343927149802.jpeg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;見てのとおり、パッケージには何もなし&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;75&#34;
		data-flex-basis=&#34;180px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;その他に揃えたもの&#34;&gt;その他に揃えたもの
&lt;/h3&gt;&lt;p&gt;　今回はlubeという、キースイッチの内部の擦れる部分にグリスを塗って音や打ち心地を改善する作業にも挑戦したかったので、それ用のツールもいくつか揃えました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;スイッチを分解するための&lt;strong&gt;キースイッチオープナー&lt;/strong&gt;(&lt;a class=&#34;link&#34; href=&#34;https://talpkeyboard.net/items/5ffc48fd8a45725bc56a391a&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;TALP KEYBORD&lt;/a&gt;さんでスイッチと一緒に買った)&lt;/li&gt;
&lt;li&gt;キースイッチ内部に塗るグリス &amp;ldquo;&lt;strong&gt;Tribosys 3203&lt;/strong&gt;&amp;rdquo; (&lt;a class=&#34;link&#34; href=&#34;https://shop.yushakobo.jp/collections/accessory/products/lubricants&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;詳しく&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;lubeするパーツを置いておける&lt;strong&gt;lubeステーション&lt;/strong&gt;(3Dプリンターで出力した。&lt;a class=&#34;link&#34; href=&#34;https://www.thingiverse.com/thing:4920600&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;使ったモデル&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;100均で買った細い筆&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://twoooooda.net/post/keybord-built-by-myself/IMG_4066.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/keybord-built-by-myself/IMG_4066_hu5187993927015294901.JPEG 480w, https://twoooooda.net/post/keybord-built-by-myself/IMG_4066_hu16343121429801460740.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;スイッチオープナー&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt; &lt;img src=&#34;https://twoooooda.net/post/keybord-built-by-myself/IMG_4068.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/keybord-built-by-myself/IMG_4068_hu18425859051785569326.JPEG 480w, https://twoooooda.net/post/keybord-built-by-myself/IMG_4068_hu6807455957690208910.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;グリス&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;
&lt;img src=&#34;https://twoooooda.net/post/keybord-built-by-myself/IMG_4067.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/keybord-built-by-myself/IMG_4067_hu11148137345058047359.JPEG 480w, https://twoooooda.net/post/keybord-built-by-myself/IMG_4067_hu9583446361528467864.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;lubeステーション&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt; &lt;img src=&#34;https://twoooooda.net/post/keybord-built-by-myself/IMG_4069.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/keybord-built-by-myself/IMG_4069_hu18349690124370108748.JPEG 480w, https://twoooooda.net/post/keybord-built-by-myself/IMG_4069_hu560981331690903640.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;使ったのは1.5mm径の筆。もっと細くていいかも&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;lubeが大変だった&#34;&gt;lubeが大変だった
&lt;/h2&gt;&lt;p&gt;　&lt;strong&gt;大変でした&amp;hellip;&lt;/strong&gt; 自作キーボードと言えば、Happy Hacking Keybordに代表される60%キーボードのような配列が一般的だと思いますが、今回作ったのはコンパクトながらフルサイズキーボードなので、98キーあります(ちなみに英字配列フルサイズキーボードは全部で102キー)。当然すべてのスイッチについてlubeしました。慣れるとスイッチ一つあたり5分くらいで済ませられるようになりましたが、かなり細かい作業なので一日にできる個数は限られており結局終わるまで数日かかりました(lubeしながら年越した)。&lt;/p&gt;
&lt;p&gt;グリスの選択や、塗る場所は&lt;a class=&#34;link&#34; href=&#34;https://keys.recompile.net/docs/keyswitch-best-practice/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;このサイト&lt;/a&gt;を参考にしました。
&lt;img src=&#34;https://twoooooda.net/post/keybord-built-by-myself/IMG_4071.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/keybord-built-by-myself/IMG_4071_hu10741460509854412781.JPEG 480w, https://twoooooda.net/post/keybord-built-by-myself/IMG_4071_hu17085659106786977501.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;lubeの様子&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;　lubeの効果ですが、たしかにあるように&lt;strong&gt;感じます&lt;/strong&gt;。lubeする前と後とでタイピングの比較はしてないので何とも言えないですが、カチャカチャというプラスチックが擦れるような音が軽減されたり、打ち心地がサクサクとした感触になったりで効果はあると思います。たぶん。ただ、60%キーボードならいざ知らず今回は98キーあるので、それら全てにlubeする労力と効果が見合うかは微妙です。私は普段からキーボードにかなり触るのでやってよかったと感じますが、とりあえず自作キーボードをやってみたいという方には障壁になるかもしれません。&lt;/p&gt;
&lt;h2 id=&#34;総額でいくらくらい&#34;&gt;総額でいくらくらい？
&lt;/h2&gt;&lt;p&gt;　詳細な値段はそれぞれのリンクから飛んでもらえれば値段はわかると思います。自作キットやキーキャップはアリエクスプレスで買ったので比較的安く抑えることができました。キースイッチやグリスはそれぞれ国内販売店である&lt;a class=&#34;link&#34; href=&#34;https://talpkeyboard.net/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;TALP KEYBORD&lt;/a&gt;や&lt;a class=&#34;link&#34; href=&#34;https://shop.yushakobo.jp/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;遊舎工房&lt;/a&gt;で購入したので、送料もかかり少し高くついてしまいました。&lt;/p&gt;
&lt;p&gt;筆やその他100均で買ったツール、lubeステーションの印刷代を除き、グリス代や送料を含めた総額は、&lt;strong&gt;¥21,136&lt;/strong&gt;となりました。これを安いと見るか高いと見るかはあなた次第です&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;総評&#34;&gt;総評
&lt;/h2&gt;&lt;p&gt;これまでつらつら書いてきましたが、金と時間をかけながらも&lt;strong&gt;自分でキーボードを作って良かった&lt;/strong&gt;と思っています。キースイッチやグリスの選択、塗り方で押し心地や音を、外装やキーキャップの選択によってデザインを、ケースや基板によってキーボードの配列や機能を完全にカスタマイズできるところが自作キーボードのいいところだと今回の挑戦でわかりました。少しでも気なった方は是非この沼に飛び込んでみては。
&lt;img src=&#34;https://twoooooda.net/post/keybord-built-by-myself/IMG_4093.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/keybord-built-by-myself/IMG_4093_hu12512391401913600125.JPEG 480w, https://twoooooda.net/post/keybord-built-by-myself/IMG_4093_hu3529590602410021615.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34; &#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt; &lt;img src=&#34;https://twoooooda.net/post/keybord-built-by-myself/IMG_4096.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/keybord-built-by-myself/IMG_4096_hu5278588969966987274.JPEG 480w, https://twoooooda.net/post/keybord-built-by-myself/IMG_4096_hu12516343500081754829.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34; &#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;17追記&#34;&gt;1/7追記
&lt;/h2&gt;&lt;p&gt;YouTubeにタイピング音の軽いデモを投稿しました。サウンドデモの動画なのにノイズがあったりで音周りが拙いですが、多少の参考になれば幸いです&lt;/p&gt;
&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe loading=&#34;lazy&#34; 
            src=&#34;https://www.youtube.com/embed/JewSuvXzGVY&#34; 
            allowfullscreen 
            title=&#34;YouTube Video&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;

</description>
        </item>
        <item>
        <title>「Looking Glass Portrait」着弾&amp;開封レビュー</title>
        <link>https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/</link>
        <pubDate>Tue, 12 Oct 2021 00:00:00 +0000</pubDate>
        
        <guid>https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/</guid>
        <description>&lt;img src="https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3916.JPEG" alt="Featured image of post 「Looking Glass Portrait」着弾&amp;開封レビュー" /&gt;&lt;p&gt;こんばんは、いっとりうむです。今年の2月くらいに、クラウドファンディングサイトkickstarterでバック(お金を出して支援すること)した返礼品である「Looking Glass Portrait」がやっと届きました。他のバッカーの方は5月くらいには届いていたようですが、住所登録のフォームの入力が遅れてしまったせいで到着が今になってしまいました。&lt;/p&gt;
&lt;h2 id=&#34;looking-glassとは&#34;&gt;Looking Glassとは？
&lt;/h2&gt;&lt;p&gt;端的に言うとズバリ「&lt;strong&gt;裸眼で立体視可能なディスプレイ&lt;/strong&gt;」です。一般的な立体視ディスプレイは青色と赤色のフィルムをレンズとしたメガネや、偏光フィルタを使ったメガネをかける必要があったりしますが、Looking Glassはそういった類のものは全く必要とせず立体視が可能です。詳しい原理は&lt;a class=&#34;link&#34; href=&#34;http://docs-ja.lookingglassfactory.com/Appendix/how-it-works/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;公式のドキュメント&lt;/a&gt;に書いてあるのでそちらを読んでもらうのが一番確実ですが、レンチキュラーレンズという特殊な構造を持ったディスプレイに横方向45視点くらいからの画像を同時に表示して、両目による視差、あるいは横に動いた時の視差を実現しています。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;最初に世に出たLooking Glassは,、全面に巨大で重厚なアクリルの塊がついた8.9インチのディスプレイでした(購入済み)。購入当時はだいたい8万円でした。  &lt;img src=&#34;https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3939.jpeg&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3939_hu6211887930886253862.jpeg 480w, https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3939_hu12486074459915700908.jpeg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;初代の8インチのものがあまりに重く、場所も取るため、小型化＆薄型化&amp;amp;低価格化(クラファン特価で$199)した「Looking Glass Portrait」が2020年末に発表されました。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;開封&#34;&gt;開封
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;製造元のLooking Glass Factory社はスタートアップながら、かなりちゃんとした化粧箱で届きました。  &lt;img src=&#34;https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3910.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3910_hu10334258361692996778.JPEG 480w, https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3910_hu16405365984407302588.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;キャリーケース付きのプランをバックしたので、まずはそちらが顔を覗かせます。  &lt;img src=&#34;https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3912.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3912_hu10504827969023300793.JPEG 480w, https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3912_hu1874189907400503567.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;本体。画面部分を見ると、先代と比べてアクリル塊が無くなっているどころか凹んでいます。  &lt;img src=&#34;https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3913.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3913_hu13674819601391550571.JPEG 480w, https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3913_hu3290073151417141313.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;   &lt;img src=&#34;https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3916.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3916_hu1805217690911218903.JPEG 480w, https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3916_hu622369081958740098.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;キャリーケースもしかっりしたオリジナルのものが付いてきました。  &lt;img src=&#34;https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3936.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3936_hu7274741883380896384.JPEG 480w, https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3936_hu3145313851988856225.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;付属品はHDMIケーブル、USB Type-Cケーブル、USB Type-C端子のACアダプタ(5V, 3A)、クリーニングクロス、キャリーケースに着ける紐がついてきました。紙類は簡単な説明書、サンキューカード的な奴、ステッカー。  &lt;img src=&#34;https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3931.JPEG&#34;
	width=&#34;2435&#34;
	height=&#34;1291&#34;
	srcset=&#34;https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3931_hu2129048083124045240.JPEG 480w, https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3931_hu15579649158768099945.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;188&#34;
		data-flex-basis=&#34;452px&#34;
	
&gt;   &lt;img src=&#34;https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3935.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3935_hu16680110229221113299.JPEG 480w, https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3935_hu12005699556328628071.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;looking-glass-portrait&#34;&gt;Looking Glass Portrait
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;スペックとしては、画面サイズが7.9インチ、重量660g。Rasberry pi 4を搭載しており、PCにつないでディスプレイとして使う他にも、電源に繋ぐだけで単体でデモを表示できます。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;向かって左側面にはHDMIとUSB Type-Cポート、3.5mmオーディオOUT。右側面には電源スイッチ(上)、LED調光スイッチ(下)、デモ操作用のタッチスイッチが3つ並んでいます。  &lt;img src=&#34;https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3932.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3932_hu8710917563285893239.JPEG 480w, https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3932_hu13172360132966432318.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;   &lt;img src=&#34;https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3933.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3933_hu7181061199256142042.JPEG 480w, https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3933_hu18302969855017528544.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ラズパイ4を内部に搭載しているので、USB Type-Cポートから電源に繋ぐだけでプリセットのデモを表示できます。デモにはiPhone12 ProのLiDARセンサーを使って撮影したポートレート写真や3DCGムービーが入ってました。中にはVirtual YouTuberのキズナアイ親分のショート動画もあってビックリしました。  &lt;img src=&#34;https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3917.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3917_hu2515401976440768162.JPEG 480w, https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3917_hu2769622317827964306.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;   &lt;img src=&#34;https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3918.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3918_hu10163567928198203353.JPEG 480w, https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3918_hu7520503821971033259.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;推奨解像度は普段あまり馴染みのない1536×2048。数字上はフルHDよりも高精細ですが、構造が特殊なこともありフルHDモニターよりもドット感が目立ちます。見てのとおり、エクスプローラーの文字も読めません。  &lt;img src=&#34;https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/27fdf35d66736661addb0b5a359d93e8.png&#34;
	width=&#34;384&#34;
	height=&#34;321&#34;
	srcset=&#34;https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/27fdf35d66736661addb0b5a359d93e8_hu4916365212353299200.png 480w, https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/27fdf35d66736661addb0b5a359d93e8_hu11841264526592772117.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;119&#34;
		data-flex-basis=&#34;287px&#34;
	
&gt;   &lt;img src=&#34;https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3940.jpeg&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3940_hu3378928418645304390.jpeg 480w, https://twoooooda.net/post/looking-glass-portrait%E7%9D%80%E5%BC%BE%E9%96%8B%E5%B0%81%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC/IMG_3940_hu6828495640947241717.jpeg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;こればかりは画像で全く伝わらないのが惜しいですが、初代Looking Glassより小型軽量化しているのにも関わらず、遜色なくちゃんと裸眼立体視出来ています。立体視の体験的には劇的に進化したという感じは少ないですが、着実に良い製品となっています。軽くなったことにより取り回しやすくなり、何倍も使いやすくなったのではないでしょうか。手の届く範囲まで値段も下がっているので、興味がある方は購入してみても後悔しないと思います。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Apple公式下取りサービス「Apple Trade In」利用レビュー</title>
        <link>https://twoooooda.net/post/apple-trade-in/</link>
        <pubDate>Sun, 03 Oct 2021 00:00:00 +0000</pubDate>
        
        <guid>https://twoooooda.net/post/apple-trade-in/</guid>
        <description>&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://twoooooda.github.io/p/iphone-13-mini%E8%B2%B7%E3%81%A3%E3%81%9F%E3%82%88%E3%83%BC/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;前回記事&lt;/a&gt;のとおり、先日発売されたiPhone13 mini を買うことにしました。幸いにして私は物持ちがすこぶる良く、2年前のiPhone11の状態もほぼ無傷だったので、Apple公式の下取りサービスである「Apple Trade In」を使ってiPhone11を下取りに出すことにしました。&lt;/p&gt;
&lt;h2 id=&#34;apple-trade-inとは&#34;&gt;Apple Trade Inとは
&lt;/h2&gt;&lt;p&gt;前述の通り、Apple社が公式で行っているApple製品下取りサービスです。AppleがiPhone6 Plus(下取り価格約3,000円)から、iPhone12 ProMax(最大84,000円)までのシリーズを引き取り、相応の値段を購入額から割り引くというよくある感じのサービスです。iPhone6以前の機種は無料で回収されるのみとのこと。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h3 id=&#34;利用手順&#34;&gt;利用手順
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;まずはiPhoneの新規購入画面で、サービスに関係する基本的なフォームを入力します。今回はiPhone11 64GBモデルなので最大33000円で下取ってくれるようです。
&lt;img src=&#34;https://twoooooda.net/post/apple-trade-in/aab9cf0b114ce358f95a619c9ba0b4dd.png&#34;
	width=&#34;413&#34;
	height=&#34;936&#34;
	srcset=&#34;https://twoooooda.net/post/apple-trade-in/aab9cf0b114ce358f95a619c9ba0b4dd_hu8005157304246812791.png 480w, https://twoooooda.net/post/apple-trade-in/aab9cf0b114ce358f95a619c9ba0b4dd_hu16936951174034982627.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;44&#34;
		data-flex-basis=&#34;105px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;↑をきちんと入力して新規購入の決済を完了すると、しばらくして追加の情報を入力するためのリンクがメールで届きます。私の場合は9/28に決済を済ませた後すぐにメールが来ました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;このフォームでは、&lt;strong&gt;自分の職業&lt;/strong&gt;(会社員or自営業or学生orその他 くらいざっくりしたもの)と、&lt;strong&gt;本人確認書類&lt;/strong&gt;のアップロードを求められます。本人確認書類は、運転免許証や健康保険証、パスポート、住民票の写し、在留カード、公共料金の領収書などから2点の提出を求められます。&lt;/li&gt;
&lt;li&gt;2点のうち1点は裏面もアップロードする必要があるので、運転免許証or健康保険証はほぼ必須でしょう。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;次に、iPhoneを回収してもらうための集荷依頼のフォームがあります。日時と時間帯を指定してこのフォームは完了です。&lt;strong&gt;14日以内&lt;/strong&gt;にデバイスを送らないと下取りがキャンセルになるようです。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;930-新iphone受け取り後&#34;&gt;9/30 新iPhone受け取り後
&lt;/h2&gt;&lt;p&gt;iPhone受け取ったら下取りキットの発送が保留になってました。メールも来ないしちょっと心配になりました。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://twoooooda.net/post/apple-trade-in/d7e82602fbf3e432c2c15873917397a2.png&#34;
	width=&#34;954&#34;
	height=&#34;314&#34;
	srcset=&#34;https://twoooooda.net/post/apple-trade-in/d7e82602fbf3e432c2c15873917397a2_hu11574862655954557885.png 480w, https://twoooooda.net/post/apple-trade-in/d7e82602fbf3e432c2c15873917397a2_hu6181295183917385277.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;303&#34;
		data-flex-basis=&#34;729px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;103-集荷に来てくれました&#34;&gt;10/3 集荷に来てくれました
&lt;/h2&gt;&lt;p&gt;指定の集荷時間を14時～16時にしたのですが、無事15時前にヤマトさんに来ていただきました。渡すものは下取りに出すiPhone11のみで、梱包もヤマトのお兄さんがやってくれました。本当に玄関先で生の本体を渡すだけでした。&lt;/p&gt;
&lt;p&gt;前日に集荷予定のリマインダーメールも寄越してくれました。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;105-査定下取りプロセス完了&#34;&gt;10/5 査定、下取りプロセス完了
&lt;/h2&gt;&lt;p&gt;Appleから査定及び下取りプロセスがすべて完了したという旨のメールが来ました。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://twoooooda.net/post/apple-trade-in/143552.png&#34;
	width=&#34;747&#34;
	height=&#34;311&#34;
	srcset=&#34;https://twoooooda.net/post/apple-trade-in/143552_hu3948980613427916512.png 480w, https://twoooooda.net/post/apple-trade-in/143552_hu9815775052139714848.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;240&#34;
		data-flex-basis=&#34;576px&#34;
	
&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;また、後日クレカの利用履歴を確認すると、同日10/5にクレカ経由で返金手続きがなされていました。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://twoooooda.net/post/apple-trade-in/IMG_3937.JPEG&#34;
	width=&#34;1125&#34;
	height=&#34;418&#34;
	srcset=&#34;https://twoooooda.net/post/apple-trade-in/IMG_3937_hu6554393279554586975.JPEG 480w, https://twoooooda.net/post/apple-trade-in/IMG_3937_hu17692504979416097819.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;269&#34;
		data-flex-basis=&#34;645px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;新iPhone購入から、約1週間で全ての手続きが完了したことになります。&lt;/strong&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>iPhone 13 mini買ったよー</title>
        <link>https://twoooooda.net/post/iphone-13-mini%E8%B2%B7%E3%81%A3%E3%81%9F%E3%82%88%E3%83%BC/</link>
        <pubDate>Fri, 01 Oct 2021 00:00:00 +0000</pubDate>
        
        <guid>https://twoooooda.net/post/iphone-13-mini%E8%B2%B7%E3%81%A3%E3%81%9F%E3%82%88%E3%83%BC/</guid>
        <description>&lt;img src="https://twoooooda.net/post/iphone-13-mini%E8%B2%B7%E3%81%A3%E3%81%9F%E3%82%88%E3%83%BC/IMG_3890.JPEG" alt="Featured image of post iPhone 13 mini買ったよー" /&gt;&lt;p&gt;私は今まで2019年モデルのiPhone11 64GBを使っていたのですが、購入当初からデカいし重いなぁと思い続けていました。そこで、先日のAppleの製品発表会で発表された&lt;strong&gt;iPhone 13 mini&lt;/strong&gt;を買うことにしました。
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;13のminiにした理由&#34;&gt;13のminiにした理由
&lt;/h2&gt;&lt;p&gt;普段家にいるときは大抵の場合、デスクトップPCに向かって作業したり暇を潰しており、さらに巷を賑わしている流行り病のせいでその習慣には拍車がかかっていました。動画を見たりするのももちろんPCで見るので、&lt;strong&gt;iPhone11&lt;/strong&gt;のような大きめのディスプレイを持つスマホは全く必要ありませんでした。しかも、昨年11月に発売された&lt;strong&gt;iPad Air 4&lt;/strong&gt;も所持しているので、スマホの存在理由といったら移動時間などの空き時間にSNSを確認したり、mobile Suicaやpaypayでの支払いくらいなので、これを機に思い切ってスマホを小型化させることにした次第です。
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;本題&#34;&gt;本題
&lt;/h2&gt;&lt;p&gt;個人的にApple製品は配送よりも、Apple Storeに直接受け取りに行く方が体験として好きです。なので今回もApple Store心斎橋に受け取りに行きました。受け取りは9/30に行きました。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;img src=&#34;https://twoooooda.net/post/iphone-13-mini%E8%B2%B7%E3%81%A3%E3%81%9F%E3%82%88%E3%83%BC/imag.jpg&#34;
	width=&#34;1000&#34;
	height=&#34;750&#34;
	srcset=&#34;https://twoooooda.net/post/iphone-13-mini%E8%B2%B7%E3%81%A3%E3%81%9F%E3%82%88%E3%83%BC/imag_hu9511569058675043934.jpg 480w, https://twoooooda.net/post/iphone-13-mini%E8%B2%B7%E3%81%A3%E3%81%9F%E3%82%88%E3%83%BC/imag_hu13737348023303900561.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;心斎橋前の様子&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;受け取りの手順としては、事前決済の時に発行される&lt;strong&gt;注文番号&lt;/strong&gt;あるいは&lt;strong&gt;専用QRコード&lt;/strong&gt;をスタッフに見せるだけで、製品を受け取れました。事前のAppleからのメールには「&lt;strong&gt;公共機関が発行した写真付きの身分証明書&lt;/strong&gt;」が必要と書いてありましたが、特に提出は求められませんでした(学生証とか保険証とか住民票とか用意したのに～)。
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h3 id=&#34;受け取れた&#34;&gt;受け取れた～
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://twoooooda.net/post/iphone-13-mini%E8%B2%B7%E3%81%A3%E3%81%9F%E3%82%88%E3%83%BC/IMG_3885.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/iphone-13-mini%E8%B2%B7%E3%81%A3%E3%81%9F%E3%82%88%E3%83%BC/IMG_3885_hu8712879382591040740.JPEG 480w, https://twoooooda.net/post/iphone-13-mini%E8%B2%B7%E3%81%A3%E3%81%9F%E3%82%88%E3%83%BC/IMG_3885_hu4989115287299412313.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;　&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;ちっちゃ軽いiphone-13-mini&#34;&gt;ちっちゃ軽い、iPhone 13 mini
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;先代のiPhone11と比べると、ACアダプターが入ってない分箱がすっごい薄い。容量は128GBで、(product)REDの赤いモデルを買いました。
&lt;img src=&#34;https://twoooooda.net/post/iphone-13-mini%E8%B2%B7%E3%81%A3%E3%81%9F%E3%82%88%E3%83%BC/IMG_3892-1.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/iphone-13-mini%E8%B2%B7%E3%81%A3%E3%81%9F%E3%82%88%E3%83%BC/IMG_3892-1_hu15250165254046946329.JPEG 480w, https://twoooooda.net/post/iphone-13-mini%E8%B2%B7%E3%81%A3%E3%81%9F%E3%82%88%E3%83%BC/IMG_3892-1_hu666070384710517987.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;美しい～。箱を開けたときのこの感動はApple製品の醍醐味でもあります。
&lt;img src=&#34;https://twoooooda.net/post/iphone-13-mini%E8%B2%B7%E3%81%A3%E3%81%9F%E3%82%88%E3%83%BC/IMG_3890.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/iphone-13-mini%E8%B2%B7%E3%81%A3%E3%81%9F%E3%82%88%E3%83%BC/IMG_3890_hu10818367622215046919.JPEG 480w, https://twoooooda.net/post/iphone-13-mini%E8%B2%B7%E3%81%A3%E3%81%9F%E3%82%88%E3%83%BC/IMG_3890_hu977141877537503138.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;個人的な推しポイントが色み。iPhone11よりも深いレッドになってます。
&lt;img src=&#34;https://twoooooda.net/post/iphone-13-mini%E8%B2%B7%E3%81%A3%E3%81%9F%E3%82%88%E3%83%BC/IMG_0238.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/iphone-13-mini%E8%B2%B7%E3%81%A3%E3%81%9F%E3%82%88%E3%83%BC/IMG_0238_hu7135278476682956919.JPEG 480w, https://twoooooda.net/post/iphone-13-mini%E8%B2%B7%E3%81%A3%E3%81%9F%E3%82%88%E3%83%BC/IMG_0238_hu12646525649379392323.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;箱の内容物はめちゃくちゃ簡素。意味のあるものといえば本体、ケーブル、SIMピンくらいしか入ってません。しかもLightning to USB type-Cという世界一使いにくいケーブルなのでこれすら意味があるのか疑わしい。
&lt;img src=&#34;https://twoooooda.net/post/iphone-13-mini%E8%B2%B7%E3%81%A3%E3%81%9F%E3%82%88%E3%83%BC/IMG_3892.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/iphone-13-mini%E8%B2%B7%E3%81%A3%E3%81%9F%E3%82%88%E3%83%BC/IMG_3892_hu133043518623820042.JPEG 480w, https://twoooooda.net/post/iphone-13-mini%E8%B2%B7%E3%81%A3%E3%81%9F%E3%82%88%E3%83%BC/IMG_3892_hu12913852019393078711.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;私が持っているiPhone7, 11, 13 miniの比較です(左から順に11, 7, 13 mini)。筐体サイズは13 miniが最小ですが、ホームボタンが無い分画面サイズは7よりも大きくなっています(画像2枚目のディスプレイの色調が違うのは、環境光によって色みを調節するTrue Toneという機能が13 miniでONになっているからだと思われる。11は写真撮る前にファクトリーリセットしちゃった)。
&lt;img src=&#34;https://twoooooda.net/post/iphone-13-mini%E8%B2%B7%E3%81%A3%E3%81%9F%E3%82%88%E3%83%BC/IMG_0236.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/iphone-13-mini%E8%B2%B7%E3%81%A3%E3%81%9F%E3%82%88%E3%83%BC/IMG_0236_hu11660289308230419469.JPEG 480w, https://twoooooda.net/post/iphone-13-mini%E8%B2%B7%E3%81%A3%E3%81%9F%E3%82%88%E3%83%BC/IMG_0236_hu11783648370667811476.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt; &lt;img src=&#34;https://twoooooda.net/post/iphone-13-mini%E8%B2%B7%E3%81%A3%E3%81%9F%E3%82%88%E3%83%BC/IMG_0237.JPEG&#34;
	width=&#34;2048&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://twoooooda.net/post/iphone-13-mini%E8%B2%B7%E3%81%A3%E3%81%9F%E3%82%88%E3%83%BC/IMG_0237_hu13649373000738072436.JPEG 480w, https://twoooooda.net/post/iphone-13-mini%E8%B2%B7%E3%81%A3%E3%81%9F%E3%82%88%E3%83%BC/IMG_0237_hu1930401802724165635.JPEG 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;丸1日くらい使ってみて&#34;&gt;丸1日くらい使ってみて
&lt;/h2&gt;&lt;p&gt;やはり軽くて小さいのは正義です。先代よりも驚くほど手にしっくりきます。よくあんな重いiPhone11なんか使ってたなと思うほどです。調べてみると11→13 miniでは&lt;strong&gt;50gも軽く&lt;/strong&gt;なっているらしい。&lt;/p&gt;
&lt;p&gt;もともとスマホでしていたことと言えばTwitterかYouTubeくらいなので、画面の小ささもそんなに不便を感じません。12 miniではかねてより言われていた&lt;strong&gt;バッテリー問題&lt;/strong&gt;ですが、たしかに使っていると減っていっているという実感はあります。ですが今のところ極端にもたないという感じもないです。しかし、私はスマホで全くと言っていいほどゲームはやらないので、ゲームをある程度する人にとっては参考にならないかもしれません&amp;hellip;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>ラズパイに公開鍵認証でssh接続するまで</title>
        <link>https://twoooooda.net/post/%E3%83%A9%E3%82%BA%E3%83%91%E3%82%A4%E3%81%AB%E5%85%AC%E9%96%8B%E9%8D%B5%E8%AA%8D%E8%A8%BC%E3%81%A7ssh%E6%8E%A5%E7%B6%9A%E3%81%99%E3%82%8B%E3%81%BE%E3%81%A7/</link>
        <pubDate>Thu, 03 Jun 2021 00:00:00 +0000</pubDate>
        
        <guid>https://twoooooda.net/post/%E3%83%A9%E3%82%BA%E3%83%91%E3%82%A4%E3%81%AB%E5%85%AC%E9%96%8B%E9%8D%B5%E8%AA%8D%E8%A8%BC%E3%81%A7ssh%E6%8E%A5%E7%B6%9A%E3%81%99%E3%82%8B%E3%81%BE%E3%81%A7/</guid>
        <description>&lt;img src="https://twoooooda.net/post/%E3%83%A9%E3%82%BA%E3%83%91%E3%82%A4%E3%81%AB%E5%85%AC%E9%96%8B%E9%8D%B5%E8%AA%8D%E8%A8%BC%E3%81%A7ssh%E6%8E%A5%E7%B6%9A%E3%81%99%E3%82%8B%E3%81%BE%E3%81%A7/raspi.jpeg" alt="Featured image of post ラズパイに公開鍵認証でssh接続するまで" /&gt;&lt;h2 id=&#34;はじめに&#34;&gt;はじめに
&lt;/h2&gt;&lt;p&gt;　家に余ってたラズパイをテレビの録画サーバーにしようと思い、部屋の奥から引っ張り出してきたのはいいですが、初期設定もsshの接続設定も何もしてなかったので勉強がてらやってみました、例の如くやらないといけないことが複数サイトに渡って散らばっていたので、備忘録として一通りまとめます。なお、ラズパイのOSはインストール済み, 有線LAN接続なのを前提とし、ラズパイからモニターにはなるべく出力せずに設定することを目指します。&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;ホストのpcからラズパイにssh接続する&#34;&gt;ホストのPCからラズパイにssh接続する
&lt;/h2&gt;&lt;p&gt;　OSをインストールしたmicroSDカードをラズパイに挿す前に, microSDカードの直下にsshという空のファイル(拡張子も無し)を作っておきます。こうすることでラズパイのGUIを触らずにsshをオンにできます。
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;※7/28追記&lt;!-- raw HTML omitted --&gt;
OSが入ったSDカードを覗くと、&lt;code&gt;boot&lt;/code&gt;と&lt;code&gt;rootfs&lt;/code&gt;というパーティションにわかれている場合がありますが、sshを有効化するには&lt;code&gt;boot&lt;/code&gt;直下に置くのが正解らしいです。&lt;/p&gt;
&lt;p&gt;　ラズパイに接続して操作するホストのPCのターミナルから、以下のコマンドを叩くだけでssh接続できます(デフォルトユーザーにログインする場合)。
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ ssh pi@raspberrypi.local
&lt;/code&gt;&lt;/pre&gt;&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;ipアドレスの固定&#34;&gt;IPアドレスの固定
&lt;/h2&gt;&lt;p&gt;　インターネットに繋げるたびにIPアドレスが変わると困るので、まずはラズパイのIPアドレスを固定します。ラズパイのIPアドレス固定の前に、ホストのPCのターミナルで以下を実行します。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ ipconfig /all
&lt;/code&gt;&lt;/pre&gt;&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;するとIPの構成が一覧で出てくるので、 &lt;strong&gt;デフォルトゲートウェイとDNSサーバーのIPアドレス&lt;/strong&gt;(192.168.x.OOOみたいなやつ)をメモします。
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;　以降はssh接続を介してラズパイのコマンドを叩いていきます。まずはラズパイの設定ファイルを開いて編集します。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pi@raspberrypi:~$ sudo nano /etc/dhcpcd.conf
&lt;/code&gt;&lt;/pre&gt;&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;nanoはviでもいいです(好み)。開いたら、末尾に以下を追加します。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;interface eth0(無線LANの場合はここをwlan0にする)
static ip_address=192.168.x.***/24
static routers=192.168.x.OOO
static domain_name_servers=192.168.x.OOO
&lt;/code&gt;&lt;/pre&gt;&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;code&gt;staric ip_adress=&lt;/code&gt;にラズパイに割り当てたいIPアドレスを書きます。***の部分は1桁、2桁台は他の危機に割り当てられていることが多いので適当に100～200くらいにするといいらしいです。/24はサブネットマスク長です。
&lt;code&gt;static routers=&lt;/code&gt;にデフォルトゲートウェイのIPアドレス、&lt;code&gt;static domain_name_servers=&lt;/code&gt;にDNSサーバーのIPアドレスを書きます。編集できたら、保存してラズパイを再起動すれば変更が適用されているはずです。
&lt;!-- raw HTML omitted --&gt;
&lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://mugeek.hatenablog.com/entry/2019/05/27/230256&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;参考記事&lt;/a&gt;&lt;/strong&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;ユーザーの追加-権限の付与&#34;&gt;ユーザーの追加, 権限の付与
&lt;/h2&gt;&lt;h3 id=&#34;新しいユーザーの追加&#34;&gt;新しいユーザーの追加
&lt;/h3&gt;&lt;p&gt;　デフォルトユーザーである「pi」とは別のユーザーを作成し、権限をそちらに移行します。sshを介してラズパイのターミナルにて、&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pi@raspberrypi:~$ sudo adduser |newuser|
&lt;/code&gt;&lt;/pre&gt;&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;|newuser| に任意のユーザー名を指定して実行します。「New password:」と「Retype new password:」へ新規ユーザーのパスワードを指定します。その後くらいにいろいろ設定項目が出てきますが、特に必要がないなら全てEnterで進んでもいいです。
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h3 id=&#34;権限の付与&#34;&gt;権限の付与
&lt;/h3&gt;&lt;p&gt;　「pi」ユーザーの権限を新しいユーザーに追加します。まずは「pi」ユーザーの権限を確認するために以下を実行します。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pi@raspberrypi:~$ groups pi
&lt;/code&gt;&lt;/pre&gt;&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;すると「pi」ユーザーに付与されている権限が一覧で表示されるので、usermodコマンドで新しいユーザーに権限を移します。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pi@raspberrypi:~$ sudo usermod -G pi,adm,dialout,cdrom,sudo,audio,video,plugdev,games,users,input,netdev,spi,i2c,gpio newuser
&lt;/code&gt;&lt;/pre&gt;&lt;!-- raw HTML omitted --&gt;
&lt;h3 id=&#34;piユーザーのホームフォルダのコピー&#34;&gt;「pi」ユーザーのホームフォルダのコピー
&lt;/h3&gt;&lt;p&gt;　「pi」ユーザーのホームフォルダの内容をnewuserのホームフォルダにコピーします。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pi@raspberrypi:~$ sudo cp -r /home/pi/* /home/newuser
&lt;/code&gt;&lt;/pre&gt;&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;デフォルトユーザーpiの無効化&#34;&gt;デフォルトユーザー(pi)の無効化
&lt;/h2&gt;&lt;p&gt;　ラズパイを起動する度に「pi」ユーザーに勝手にログインされると困るので、「pi」ユーザーへの自動ログインをオフにして、ついでに「pi」ユーザーを無効化します。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pi@raspberrypi:~$ sudo nano /etc/lightdm/lightdm.conf
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;/lightdm/lightdm.confの126行目の先頭に#を入れてコメントアウトします(&lt;code&gt;#autologin-user=pi&lt;/code&gt;)。
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;　次に、newuserでオートログインするようにします。autologin@.serviceを開いて、28行目の「&amp;ndash;autologin pi」を「&amp;ndash;autologin newuser」へ変更します。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pi@raspberrypi:~$ sudo vi /etc/systemd/system/autologin@.service
&lt;/code&gt;&lt;/pre&gt;&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;　最後に「pi」ユーザーを無効にします。ユーザーのアカウントの有効期限を過去の日付にすることで無効化できます。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pi@raspberrypi:~$ sudo usermod --expiredate 1 pi
&lt;/code&gt;&lt;/pre&gt;&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;以降は新しく作成したnewuserで作業します。&lt;!-- raw HTML omitted --&gt;
&lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://monoist.atmarkit.co.jp/mn/articles/1912/11/news022_2.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;参考記事&lt;/a&gt;&lt;/strong&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;鍵ペアの生成と送信設定&#34;&gt;鍵ペアの生成と送信、設定
&lt;/h2&gt;&lt;h3 id=&#34;鍵の生成と送信&#34;&gt;鍵の生成と送信
&lt;/h3&gt;&lt;p&gt;　公開鍵認証とは、パスワードの代わりに公開鍵(ホスト側のPC)と秘密鍵(ラズパイ)のペアで認証する方法です。まずはホストのPCに鍵ペアを生成するディレクトリ及び鍵ペアを作ります。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ mkdir ~/.ssh/raspberrypi
$ ssh-keygen -t rsa
&lt;/code&gt;&lt;/pre&gt;&lt;!-- raw HTML omitted --&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Enter file in which to save the key (/Users/username/raspberrypi/.ssh/id_rsa):
&lt;/code&gt;&lt;/pre&gt;&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;必要に応じてこの後に聞かれるパスフレーズも入力します。自分は省略しました。これで秘密鍵の&lt;code&gt;id_rsa&lt;/code&gt;と公開鍵の&lt;code&gt;id_rsa.pub&lt;/code&gt;が生成されます。これらのうち&lt;code&gt;id_rsa.pub&lt;/code&gt;をラズパイ側に送ります。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ scp ~/.ssh/raspberrypi/id_rsa.pub newuser@raspberrypi:~
&lt;/code&gt;&lt;/pre&gt;&lt;!-- raw HTML omitted --&gt;
&lt;h3 id=&#34;公開鍵の設定&#34;&gt;公開鍵の設定
&lt;/h3&gt;&lt;p&gt;　ラズパイにパスワード認証でログインし、鍵を管理する&lt;code&gt;.ssh&lt;/code&gt;を作ります。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;newuser@raspberrypi:~$ sudo mkdir ~/.ssh
&lt;/code&gt;&lt;/pre&gt;&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;先ほど送信した&lt;code&gt;id_rsa.pub&lt;/code&gt;を&lt;code&gt;authorized_keys&lt;/code&gt;と名前を変更しつつ&lt;code&gt;.ssh&lt;/code&gt;に移動します。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;newuser@raspberrypi:~$ sudo mv ~/id_rsa.pub ~/.ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;次に&lt;code&gt;.ssh&lt;/code&gt;、&lt;code&gt;authorized_keys&lt;/code&gt;のパーミッションを変更します。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;newuser@raspberrypi:~$ chmod 600 ~/.ssh/authorized_keys
newuser@raspberrypi:~$ chmod 700 ~/.ssh
&lt;/code&gt;&lt;/pre&gt;&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;最後に&lt;code&gt;ssh_config&lt;/code&gt;を修正します。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;newuser@raspberrypi:~$ sudo nano /etc/ssh/sshd_config
&lt;/code&gt;&lt;/pre&gt;&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;以下のような記載の行のコメントアウトを外して編集します。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;AuthorizedKeysFile .ssh/authorized_keys .ssh/authorized_keys2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;この時にポート番号の変更や、パスワード認証のオフができます。しかし、&lt;strong&gt;公開鍵認証が上手くいってない状態でパスワード認証をオフにしてしまうと、次回からログインできなくなってしまう&lt;/strong&gt;ので慎重に行ってください。最悪OSのインストールし直しになります(私は既に何度かやらかしました)。
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;最後にラズパイを再起動すると、次回から以下のコマンドで公開鍵認証でログインできるはずです。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ ssh -i [秘密鍵ファイル] -p [ポート番号] pi@[Raspberry PiのIPアドレス]
(例)ssh -i .ssh/id_rsa -p 22 pi@192.168.0.100
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://tool-lab.com/raspi-key-authentication-over-ssh/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;参考記事&lt;/a&gt;&lt;/strong&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h1 id=&#34;ssh-configの追加&#34;&gt;ssh configの追加
&lt;/h1&gt;&lt;p&gt;　この方法で接続してもいいんですが、コマンドが長いので短縮します。
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;~/.ssh/config&lt;/code&gt;を作り、以下を追記します。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Host [任意のコマンド名]
	HostName [ラズパイのIPアドレス]
	User [ラズパイのユーザーネーム]
	Port [ラズパイのポート番号]
	IdentityFile [秘密鍵ファイル]
&lt;/code&gt;&lt;/pre&gt;&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;今回の例では以下のようになります。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Host raspi
	HostName 192.168.1.100
	User newuser
	Port 22
	IdentityFile ~/.ssh/id_rsa
&lt;/code&gt;&lt;/pre&gt;&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;こうすることでssh接続時のコマンドを以下のように大幅に短縮できます。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ssh raspi
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://zenn.dev/ryo_kawamata/articles/raspberrypi-auth-setting&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;参考記事&lt;/a&gt;&lt;/strong&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;以上です。ファイル名や環境は各々によって違うのでそこは適宜変更をおねがいします。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>About Me</title>
        <link>https://twoooooda.net/about-me/</link>
        <pubDate>Fri, 07 May 2021 00:00:00 +0000</pubDate>
        
        <guid>https://twoooooda.net/about-me/</guid>
        <description></description>
        </item>
        <item>
        <title>HUGOで作ったサイトにアマゾンのアフィリンクを貼る</title>
        <link>https://twoooooda.net/post/hugo%E3%81%A7%E4%BD%9C%E3%81%A3%E3%81%9F%E3%82%B5%E3%82%A4%E3%83%88%E3%81%AB%E3%82%A2%E3%83%9E%E3%82%BE%E3%83%B3%E3%81%AE%E3%82%A2%E3%83%95%E3%82%A3%E3%83%AA%E3%83%B3%E3%82%AF%E3%82%92%E8%B2%BC%E3%82%8B/</link>
        <pubDate>Tue, 13 Apr 2021 00:00:00 +0000</pubDate>
        
        <guid>https://twoooooda.net/post/hugo%E3%81%A7%E4%BD%9C%E3%81%A3%E3%81%9F%E3%82%B5%E3%82%A4%E3%83%88%E3%81%AB%E3%82%A2%E3%83%9E%E3%82%BE%E3%83%B3%E3%81%AE%E3%82%A2%E3%83%95%E3%82%A3%E3%83%AA%E3%83%B3%E3%82%AF%E3%82%92%E8%B2%BC%E3%82%8B/</guid>
        <description>&lt;img src="https://twoooooda.net/post/hugo%E3%81%A7%E4%BD%9C%E3%81%A3%E3%81%9F%E3%82%B5%E3%82%A4%E3%83%88%E3%81%AB%E3%82%A2%E3%83%9E%E3%82%BE%E3%83%B3%E3%81%AE%E3%82%A2%E3%83%95%E3%82%A3%E3%83%AA%E3%83%B3%E3%82%AF%E3%82%92%E8%B2%BC%E3%82%8B/hugo.png" alt="Featured image of post HUGOで作ったサイトにアマゾンのアフィリンクを貼る" /&gt;&lt;h1 id=&#34;hugoの仕様&#34;&gt;HUGOの仕様
&lt;/h1&gt;&lt;p&gt;　静的サイトジェネレータ &amp;ldquo;HUGO&amp;rdquo; は、テーマの制作者がGitHubに上げているリポジトリをサブモジュールとして使うことで自分のサイトにテーマを導入します。ゆえに、テーマのレイアウトに関わるコードを直接書き換えることはできません(ローカルファイルは書き換えられますが)。
&lt;!-- raw HTML omitted --&gt;
　しかしHUGOの仕様として、&lt;code&gt;/static&lt;/code&gt;や&lt;code&gt;/layouts&lt;/code&gt;以下のフォルダやファイルが優先して読み込まれるというものがあります。
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h1 id=&#34;ではどうするか&#34;&gt;ではどうするか
&lt;/h1&gt;&lt;p&gt;　&lt;a class=&#34;link&#34; href=&#34;https://themes.gohugo.io/themes/hugo-theme-stack/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;当サイトのテーマ&lt;/a&gt;を例にすると、&lt;code&gt;/themes/hugo-theme-stack/layouts/partials/sidebar/right.html&lt;/code&gt;を書き換えたい場合、該当のファイルを&lt;code&gt;/layouts/partials/&lt;/code&gt;にコピー＆ペーストすると、そちらの方が先に読み込まれるので結果的に編集して上書きが可能なわけです。
&lt;!-- raw HTML omitted --&gt;
　あとはAmazonのアフィリエイトリンクのHTMLコードを生成して、上記のright.htmlに書き込むとちゃんと表示されました。
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Unityで蚊っぽい動きをするやつを作る</title>
        <link>https://twoooooda.net/post/mosquite-in-unity/</link>
        <pubDate>Fri, 02 Apr 2021 00:00:00 +0000</pubDate>
        
        <guid>https://twoooooda.net/post/mosquite-in-unity/</guid>
        <description>&lt;img src="https://twoooooda.net/post/mosquite-in-unity/ka.png" alt="Featured image of post Unityで蚊っぽい動きをするやつを作る" /&gt;&lt;h2 id=&#34;はじめに&#34;&gt;はじめに
&lt;/h2&gt;&lt;p&gt;　 少し前にOculus Quest2を購入し、しばらくハンドトラッキングで遊んでいたんですが、急に『手で蚊を潰すVRゲーム』を作りたくなったのでとりあえず蚊っぽい挙動をするナニカを作りました。
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;スクリプト&#34;&gt;スクリプト
&lt;/h2&gt;&lt;p&gt;　やっていることはごく簡単で、数フレームに一回ランダムでRotationの値を変更し、Z方向に常に力を加え続けているだけです。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cs:Move_mosquite.cs&#34; data-lang=&#34;cs:Move_mosquite.cs&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;UnityEngine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Move_mosquite&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MonoBehaviour&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Rigidbody&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;float&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;freq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;speed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;power&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;rb&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GetComponent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Rigidbody&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Update&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;rb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;velocity&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;velocity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;normalized&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;speed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//変数speedで速度の設定&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;rb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AddForce&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;transform&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;forward&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;power&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;deltaTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ForceMode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Force&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//Z方向(forward)に力を加え続ける&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Random&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;freq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//Rotationを変更する頻度を設定。毎フレームだと頻繁過ぎるので。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;transform&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eulerAngles&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Vector3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Random&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;360&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Random&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;360&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Random&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;360&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;このままでは無限にどっかいってしまうので、適当にコライダーをつけるとか、壁に近づくと力を受けるとかにするといいかもしれません。&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
なお、当方めちゃくちゃ初心者なのでもっと効率的なやり方や、もっとリアルになるやり方があるかもしれませんのであしからず&amp;hellip;.&lt;/p&gt;
&lt;h2 id=&#34;完成例&#34;&gt;完成例
&lt;/h2&gt;&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe loading=&#34;lazy&#34; 
            src=&#34;https://www.youtube.com/embed/SFOzY6yHWQc&#34; 
            allowfullscreen 
            title=&#34;YouTube Video&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;!-- raw HTML omitted --&gt;
</description>
        </item>
        <item>
        <title>静的サイトジェネレータ”HUGO”で個人ブログをつくり、GitHub Pagesで公開する</title>
        <link>https://twoooooda.net/post/%E9%9D%99%E7%9A%84%E3%82%B5%E3%82%A4%E3%83%88%E3%82%B8%E3%82%A7%E3%83%8D%E3%83%AC%E3%83%BC%E3%82%BFhugo%E3%81%A7%E5%80%8B%E4%BA%BA%E3%83%96%E3%83%AD%E3%82%B0%E3%82%92%E3%81%A4%E3%81%8F%E3%82%8Agithub-pages%E3%81%A7%E5%85%AC%E9%96%8B%E3%81%99%E3%82%8B/</link>
        <pubDate>Mon, 08 Mar 2021 00:00:00 +0000</pubDate>
        
        <guid>https://twoooooda.net/post/%E9%9D%99%E7%9A%84%E3%82%B5%E3%82%A4%E3%83%88%E3%82%B8%E3%82%A7%E3%83%8D%E3%83%AC%E3%83%BC%E3%82%BFhugo%E3%81%A7%E5%80%8B%E4%BA%BA%E3%83%96%E3%83%AD%E3%82%B0%E3%82%92%E3%81%A4%E3%81%8F%E3%82%8Agithub-pages%E3%81%A7%E5%85%AC%E9%96%8B%E3%81%99%E3%82%8B/</guid>
        <description>&lt;img src="https://twoooooda.net/post/%E9%9D%99%E7%9A%84%E3%82%B5%E3%82%A4%E3%83%88%E3%82%B8%E3%82%A7%E3%83%8D%E3%83%AC%E3%83%BC%E3%82%BFhugo%E3%81%A7%E5%80%8B%E4%BA%BA%E3%83%96%E3%83%AD%E3%82%B0%E3%82%92%E3%81%A4%E3%81%8F%E3%82%8Agithub-pages%E3%81%A7%E5%85%AC%E9%96%8B%E3%81%99%E3%82%8B/hugo.png" alt="Featured image of post 静的サイトジェネレータ”HUGO”で個人ブログをつくり、GitHub Pagesで公開する" /&gt;&lt;h2 id=&#34;はじめに&#34;&gt;はじめに
&lt;/h2&gt;&lt;p&gt;　自分は最近、当ブログを静的サイトジェネレータであるHUGOを用いて作成しました。HUGO自体はわかってしまえばごく簡単に導入、使用できるんですが、いかんせん自分がweb系、GitHubに関して無知であったためハマりポイントをことごとく踏み抜いていき、結局公開までかなり時間がかかってしまいました。なので覚えているうちに使い方や参考サイトをまとめようと思います。&lt;/p&gt;
&lt;p&gt;　ちなみにデプロイ方法等は我流でやっていますが、いろんな方法があるみたいなのであくまで一例としてお読み頂けたら光栄です。&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;1hugoのインストール&#34;&gt;1.HUGOのインストール
&lt;/h2&gt;&lt;p&gt;　基本的には、HUGOの公式サイトにある&lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/getting-started/quick-start/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Quick Start&lt;/a&gt;に従ってHUGOをインストールしていきます。自分はWindows環境なので、&lt;a class=&#34;link&#34; href=&#34;https://chocolatey.org/install&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Chocolatey&lt;/a&gt;というパッケージマネージャを使ってインストールしました。以降はコマンドプロンプト上で、&lt;code&gt;$ choco install hugo -confirm&lt;/code&gt;を実行するとHUGOがインストールされるはずです。&lt;code&gt;$ hugo version&lt;/code&gt;でバージョンが確認できたらインストールされています。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hugo version
hugo v0.81.0-59D15C97 windows/amd64 ....  
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;2githubの準備&#34;&gt;2.GitHubの準備
&lt;/h2&gt;&lt;p&gt;　自分のGitHubのページにて、[UserName].github.ioという名前でリポジトリを作ります。リポジトリ名をこうすることでGitHubさんがPages用のリポジトリだと勝手に判断してくれます。なのでリポジトリ名がページのURL&lt;code&gt;https://&amp;lt;UserName&amp;gt;.github.io&lt;/code&gt;になります。あとはこのリポジトリをクローンして取り敢えず環境は完成です。&lt;/p&gt;
&lt;p&gt;　一般的なのはソースコード用のリポジトリを別で作り、ビルド結果だけをPages用のリポジトリにあげる方法らしいのですが、自分はリポジトリが増えるのが嫌だったので、souceブランチをソースコード用、mainブランチをデプロイ用のブランチにしました。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;3サイトのひな形を作る&#34;&gt;3.サイトのひな形を作る
&lt;/h2&gt;&lt;p&gt;　まずsourceブランチを作り、その下にHUGOのコマンドでファイルを作っていきます。&lt;code&gt;$ hugo new site &amp;lt;フォルダ名&amp;gt;&lt;/code&gt;でHUGOを使う上で最小限のファイルとフォルダを作成できます。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd &amp;lt;UserName&amp;gt;.github.io
$ git branch source
$ git checkout source
$ hugo new site blog
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;自分はsourceブランチ直下で作業したかったので、blogフォルダ内の内容をsourceブランチ直下に移動させました(blogフォルダは削除)。&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;4テーマを導入する&#34;&gt;4.テーマを導入する
&lt;/h2&gt;&lt;p&gt;　&lt;a class=&#34;link&#34; href=&#34;https://themes.gohugo.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;HUGO公式のthemeページ&lt;/a&gt;からテーマを選んで、自分のリポジトリに&lt;a class=&#34;link&#34; href=&#34;https://qiita.com/sotarok/items/0d525e568a6088f6f6bb&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;サブモジュール&lt;/a&gt;として追加します。例としてこのブログのテーマ(&lt;a class=&#34;link&#34; href=&#34;https://themes.gohugo.io/hugo-future-imperfect-slim/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo Future Imperfect Slim&lt;/a&gt;)を用います。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git submodule add https://github.com/pacollins/hugo-future-imperfect-slim.git themes/hugo-future-imperfect-slim
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;サブモジュール化ができたら、themes/hugo-future-imperfect-slim/&lt;strong&gt;exampleSite&lt;/strong&gt; 内のファイルやフォルダをまるっとブランチ直下にコピーします。それと同時に、もともとあったconfig.tomlは消しておきます(configファイルが競合するため)。&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;5-試運転してみる&#34;&gt;5. 試運転してみる
&lt;/h2&gt;&lt;p&gt;　&lt;code&gt;$ hugo server&lt;/code&gt;でローカルにサーバーをたてて、&lt;a class=&#34;link&#34; href=&#34;http://localhost:1313/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://localhost:1313&lt;/a&gt;にアクセスするとサイトの内容を確認できます。ここまでが正しくなされているとテーマのDemoサイトと同じ状態になっているはずです。&lt;br&gt;
　また、&lt;code&gt;$ hugo&lt;/code&gt;でサイトのデータをビルドできます(/publicが生成される)。
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;6github-actionsの設定&#34;&gt;6.GitHub Actionsの設定
&lt;/h2&gt;&lt;p&gt;　&lt;strong&gt;GitHub Actions&lt;/strong&gt;とは、リポジトリにコミット等があった時にそれを検知して自動的にデプロイとかする機能(?)らしいです(今回の場合)。自分は雰囲気で使っているので詳しくは知りません。&lt;br&gt;
　sourceブランチの下に、.github/workflows/&lt;strong&gt;main.yml&lt;/strong&gt;を作成します。&lt;a class=&#34;link&#34; href=&#34;https://reona.dev/posts/20200331&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Reonaさんのブログ&lt;/a&gt;を参考にしてmain.ymlに記載のあるデプロイ先ブランチとかを編集しました。&lt;/p&gt;
&lt;p&gt;　ここまでやってきたことをまるっとsourceブランチにコミットすると、Actionsが働いてmainブランチにデプロイされ、ページが公開されるはずです。&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;7-設定を編集する&#34;&gt;7. 設定を編集する
&lt;/h2&gt;&lt;p&gt;　config.tomlを見てみると、設定の項目がズラリとならんでいます。ここでサイトを自分用にするための設定をしていきます(サイトの名前、アイコン、URLなど)。&lt;br&gt;
　ここで、アイコンに設定したい画像等をconfig.tomlから指定するのですが、そういうのは基本 &lt;strong&gt;/static&lt;/strong&gt;に保存して、パスを指定するようです。追加のcssで見た目を変えたい時も、/themesの中には書かず、/layouts/partials内とかに書くようです(細かいところはテーマによって変わるのでテーマのDocumentを読んでね)。&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;8記事を追加する&#34;&gt;8.記事を追加する
&lt;/h2&gt;&lt;p&gt;　サイトの枠組みが完成したら、あとはサンプルの記事を削除して、自分の記事を追加していきます。&lt;code&gt;$ hugo new &amp;lt;フォルダ名&amp;gt;/&amp;lt;ファイル名&amp;gt;&lt;/code&gt;で新しい記事を追加できます。基本的に記事は全てMarkdown形式で書きます。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;例) $ hugo new content/blog/article_2021-01-01.md  
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h1 id=&#34;参考サイト&#34;&gt;参考サイト
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://dev.to/mshr_h/hugo-github-pages-35me&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo+Github Pagesで新しい個人ウェブサイトを作った&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://zenn.dev/nikaera/articles/hugo-github-actions-for-github-pages&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo + GitHub Pages + GitHub Actions で独自ドメインのウェブサイトを構築する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://reona.dev/posts/20200331&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub Pages × Hugo で技術ブログを始めた&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>About Me</title>
        <link>https://twoooooda.net/about/</link>
        <pubDate>Sun, 07 Mar 2021 00:00:00 +0000</pubDate>
        
        <guid>https://twoooooda.net/about/</guid>
        <description></description>
        </item>
        <item>
        <title>Hello, world！</title>
        <link>https://twoooooda.net/post/hello-world/</link>
        <pubDate>Sun, 07 Mar 2021 00:00:00 +0000</pubDate>
        
        <guid>https://twoooooda.net/post/hello-world/</guid>
        <description>&lt;img src="https://twoooooda.net/post/hello-world/publicdomainq-0012425opp.jpg" alt="Featured image of post Hello, world！" /&gt;&lt;h2 id=&#34;苦悩の末&#34;&gt;苦悩の末
&lt;/h2&gt;&lt;p&gt;　最近急にはてなブログやnoteとは違う個人ブログが欲しくなり、静的サイトジェネレーターであるHUGOと、勉強がてらGitHub Pages、Actionsを使ってブログを作ってみました。実はサイト作成にあたり数日間に渡り大変苦労したのですが、その話はHUGO等の使い方とともにまとめようと思います。&lt;/p&gt;
&lt;p&gt;ではまた。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Archives</title>
        <link>https://twoooooda.net/archives/</link>
        <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
        
        <guid>https://twoooooda.net/archives/</guid>
        <description></description>
        </item>
        <item>
        <title>Search</title>
        <link>https://twoooooda.net/search/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://twoooooda.net/search/</guid>
        <description></description>
        </item>
        
    </channel>
</rss>
